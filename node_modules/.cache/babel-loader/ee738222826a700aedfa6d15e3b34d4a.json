{"ast":null,"code":"/*!\n * \n *   react-simple-keyboard v2.5.79\n *   https://github.com/hodgef/react-simple-keyboard\n * \n *   Copyright (c) Francisco Hodge (https://github.com/hodgef)\n * \n *   This source code is licensed under the MIT license found in the\n *   LICENSE file in the root directory of this source tree.\n *   \n */\n!function (t, e) {\n  \"object\" === typeof exports && \"object\" === typeof module ? module.exports = e(require(\"react\")) : \"function\" === typeof define && define.amd ? define(\"ReactSimpleKeyboard\", [\"react\"], e) : \"object\" === typeof exports ? exports.ReactSimpleKeyboard = e(require(\"react\")) : t.ReactSimpleKeyboard = e(t.React);\n}(this, function (t) {\n  return function (t) {\n    var e = {};\n\n    function __webpack_require__(n) {\n      if (e[n]) return e[n].exports;\n      var o = e[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return t[n].call(o.exports, o, o.exports, __webpack_require__), o.l = !0, o.exports;\n    }\n\n    return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, n) {\n      __webpack_require__.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: n\n      });\n    }, __webpack_require__.r = function (t) {\n      \"undefined\" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, __webpack_require__.t = function (t, e) {\n      if (1 & e && (t = __webpack_require__(t)), 8 & e) return t;\n      if (4 & e && \"object\" === typeof t && t && t.__esModule) return t;\n      var n = Object.create(null);\n      if (__webpack_require__.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var o in t) {\n        __webpack_require__.d(n, o, function (e) {\n          return t[e];\n        }.bind(null, o));\n      }\n      return n;\n    }, __webpack_require__.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return __webpack_require__.d(e, \"a\", e), e;\n    }, __webpack_require__.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, __webpack_require__.p = \"/\", __webpack_require__(__webpack_require__.s = 3);\n  }([function (e, n) {\n    e.exports = t;\n  }, function (t, e, n) {\n    (function (t) {\n      var o,\n          i,\n          r,\n          s,\n          a = n(5);\n      s = function s() {\n        return function (t) {\n          var e = {};\n\n          function __webpack_require__(n) {\n            if (e[n]) return e[n].exports;\n            var o = e[n] = {\n              i: n,\n              l: !1,\n              exports: {}\n            };\n            return t[n].call(o.exports, o, o.exports, __webpack_require__), o.l = !0, o.exports;\n          }\n\n          return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, n) {\n            __webpack_require__.o(t, e) || Object.defineProperty(t, e, {\n              enumerable: !0,\n              get: n\n            });\n          }, __webpack_require__.r = function (t) {\n            \"undefined\" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n              value: \"Module\"\n            }), Object.defineProperty(t, \"__esModule\", {\n              value: !0\n            });\n          }, __webpack_require__.t = function (t, e) {\n            if (1 & e && (t = __webpack_require__(t)), 8 & e) return t;\n            if (4 & e && \"object\" === a(t) && t && t.__esModule) return t;\n            var n = Object.create(null);\n            if (__webpack_require__.r(n), Object.defineProperty(n, \"default\", {\n              enumerable: !0,\n              value: t\n            }), 2 & e && \"string\" != typeof t) for (var o in t) {\n              __webpack_require__.d(n, o, function (e) {\n                return t[e];\n              }.bind(null, o));\n            }\n            return n;\n          }, __webpack_require__.n = function (t) {\n            var e = t && t.__esModule ? function () {\n              return t.default;\n            } : function () {\n              return t;\n            };\n            return __webpack_require__.d(e, \"a\", e), e;\n          }, __webpack_require__.o = function (t, e) {\n            return Object.prototype.hasOwnProperty.call(t, e);\n          }, __webpack_require__.p = \"/\", __webpack_require__(__webpack_require__.s = 0);\n        }([function (t, e, n) {\n          t.exports = n(1);\n        }, function (t, e, n) {\n          \"use strict\";\n\n          function _arrayLikeToArray(t, e) {\n            (null == e || e > t.length) && (e = t.length);\n\n            for (var n = 0, o = new Array(e); n < e; n++) {\n              o[n] = t[n];\n            }\n\n            return o;\n          }\n\n          function _typeof(t) {\n            return (_typeof = \"function\" === typeof Symbol && \"symbol\" === a(Symbol.iterator) ? function (t) {\n              return a(t);\n            } : function (t) {\n              return t && \"function\" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : a(t);\n            })(t);\n          }\n\n          function _defineProperties(t, e) {\n            for (var n = 0; n < e.length; n++) {\n              var o = e[n];\n              o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n            }\n          }\n\n          n.r(e);\n\n          var o,\n              i,\n              r,\n              s = function () {\n            function Utilities(t) {\n              var e = t.getOptions,\n                  n = t.getCaretPosition,\n                  o = t.getCaretPositionEnd,\n                  i = t.dispatch;\n              !function (t, e) {\n                if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n              }(this, Utilities), this.getOptions = e, this.getCaretPosition = n, this.getCaretPositionEnd = o, this.dispatch = i, Utilities.bindMethods(Utilities, this);\n            }\n\n            var t, e, n;\n            return t = Utilities, n = [{\n              key: \"bindMethods\",\n              value: function value(t, e) {\n                var n,\n                    o = function (t, e) {\n                  var _n;\n\n                  if (\"undefined\" === typeof Symbol || null == t[Symbol.iterator]) {\n                    if (Array.isArray(t) || (_n = function (t, e) {\n                      if (t) {\n                        if (\"string\" === typeof t) return _arrayLikeToArray(t, e);\n                        var n = Object.prototype.toString.call(t).slice(8, -1);\n                        return \"Object\" === n && t.constructor && (n = t.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(t) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(t, e) : void 0;\n                      }\n                    }(t)) || e && t && \"number\" === typeof t.length) {\n                      _n && (t = _n);\n\n                      var o = 0,\n                          F = function F() {};\n\n                      return {\n                        s: F,\n                        n: function n() {\n                          return o >= t.length ? {\n                            done: !0\n                          } : {\n                            done: !1,\n                            value: t[o++]\n                          };\n                        },\n                        e: function e(t) {\n                          throw t;\n                        },\n                        f: F\n                      };\n                    }\n\n                    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                  }\n\n                  var i,\n                      r = !0,\n                      s = !1;\n                  return {\n                    s: function s() {\n                      _n = t[Symbol.iterator]();\n                    },\n                    n: function n() {\n                      var t = _n.next();\n\n                      return r = t.done, t;\n                    },\n                    e: function e(t) {\n                      s = !0, i = t;\n                    },\n                    f: function f() {\n                      try {\n                        r || null == _n.return || _n.return();\n                      } finally {\n                        if (s) throw i;\n                      }\n                    }\n                  };\n                }(Object.getOwnPropertyNames(t.prototype));\n\n                try {\n                  for (o.s(); !(n = o.n()).done;) {\n                    var i = n.value;\n                    \"constructor\" === i || \"bindMethods\" === i || (e[i] = e[i].bind(e));\n                  }\n                } catch (r) {\n                  o.e(r);\n                } finally {\n                  o.f();\n                }\n              }\n            }], (e = [{\n              key: \"getButtonClass\",\n              value: function value(t) {\n                var e = t.includes(\"{\") && t.includes(\"}\") && \"{//}\" !== t ? \"functionBtn\" : \"standardBtn\",\n                    n = t.replace(\"{\", \"\").replace(\"}\", \"\"),\n                    o = \"\";\n                return \"standardBtn\" !== e && (o = \" hg-button-\".concat(n)), \"hg-\".concat(e).concat(o);\n              }\n            }, {\n              key: \"getDefaultDiplay\",\n              value: function value() {\n                return {\n                  \"{bksp}\": \"backspace\",\n                  \"{backspace}\": \"backspace\",\n                  \"{enter}\": \"< enter\",\n                  \"{shift}\": \"shift\",\n                  \"{shiftleft}\": \"shift\",\n                  \"{shiftright}\": \"shift\",\n                  \"{alt}\": \"alt\",\n                  \"{s}\": \"shift\",\n                  \"{tab}\": \"tab\",\n                  \"{lock}\": \"caps\",\n                  \"{capslock}\": \"caps\",\n                  \"{accept}\": \"Submit\",\n                  \"{space}\": \" \",\n                  \"{//}\": \" \",\n                  \"{esc}\": \"esc\",\n                  \"{escape}\": \"esc\",\n                  \"{f1}\": \"f1\",\n                  \"{f2}\": \"f2\",\n                  \"{f3}\": \"f3\",\n                  \"{f4}\": \"f4\",\n                  \"{f5}\": \"f5\",\n                  \"{f6}\": \"f6\",\n                  \"{f7}\": \"f7\",\n                  \"{f8}\": \"f8\",\n                  \"{f9}\": \"f9\",\n                  \"{f10}\": \"f10\",\n                  \"{f11}\": \"f11\",\n                  \"{f12}\": \"f12\",\n                  \"{numpaddivide}\": \"/\",\n                  \"{numlock}\": \"lock\",\n                  \"{arrowup}\": \"\\u2191\",\n                  \"{arrowleft}\": \"\\u2190\",\n                  \"{arrowdown}\": \"\\u2193\",\n                  \"{arrowright}\": \"\\u2192\",\n                  \"{prtscr}\": \"print\",\n                  \"{scrolllock}\": \"scroll\",\n                  \"{pause}\": \"pause\",\n                  \"{insert}\": \"ins\",\n                  \"{home}\": \"home\",\n                  \"{pageup}\": \"up\",\n                  \"{delete}\": \"del\",\n                  \"{end}\": \"end\",\n                  \"{pagedown}\": \"down\",\n                  \"{numpadmultiply}\": \"*\",\n                  \"{numpadsubtract}\": \"-\",\n                  \"{numpadadd}\": \"+\",\n                  \"{numpadenter}\": \"enter\",\n                  \"{period}\": \".\",\n                  \"{numpaddecimal}\": \".\",\n                  \"{numpad0}\": \"0\",\n                  \"{numpad1}\": \"1\",\n                  \"{numpad2}\": \"2\",\n                  \"{numpad3}\": \"3\",\n                  \"{numpad4}\": \"4\",\n                  \"{numpad5}\": \"5\",\n                  \"{numpad6}\": \"6\",\n                  \"{numpad7}\": \"7\",\n                  \"{numpad8}\": \"8\",\n                  \"{numpad9}\": \"9\"\n                };\n              }\n            }, {\n              key: \"getButtonDisplayName\",\n              value: function value(t, e, n) {\n                return (e = n ? Object.assign({}, this.getDefaultDiplay(), e) : e || this.getDefaultDiplay())[t] || t;\n              }\n            }, {\n              key: \"getUpdatedInput\",\n              value: function value(t, e, n) {\n                var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n,\n                    i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],\n                    r = this.getOptions(),\n                    s = [n, o, i],\n                    a = e;\n                return (\"{bksp}\" === t || \"{backspace}\" === t) && a.length > 0 ? a = this.removeAt.apply(this, [a].concat(s)) : \"{space}\" === t ? a = this.addStringAt.apply(this, [a, \" \"].concat(s)) : \"{tab}\" !== t || \"boolean\" === typeof r.tabCharOnTab && !1 === r.tabCharOnTab ? \"{enter}\" !== t && \"{numpadenter}\" !== t || !r.newLineOnEnter ? t.includes(\"numpad\") && Number.isInteger(Number(t[t.length - 2])) ? a = this.addStringAt.apply(this, [a, t[t.length - 2]].concat(s)) : \"{numpaddivide}\" === t ? a = this.addStringAt.apply(this, [a, \"/\"].concat(s)) : \"{numpadmultiply}\" === t ? a = this.addStringAt.apply(this, [a, \"*\"].concat(s)) : \"{numpadsubtract}\" === t ? a = this.addStringAt.apply(this, [a, \"-\"].concat(s)) : \"{numpadadd}\" === t ? a = this.addStringAt.apply(this, [a, \"+\"].concat(s)) : \"{numpaddecimal}\" === t ? a = this.addStringAt.apply(this, [a, \".\"].concat(s)) : \"{\" === t || \"}\" === t ? a = this.addStringAt.apply(this, [a, t].concat(s)) : t.includes(\"{\") || t.includes(\"}\") || (a = this.addStringAt.apply(this, [a, t].concat(s))) : a = this.addStringAt.apply(this, [a, \"\\n\"].concat(s)) : a = this.addStringAt.apply(this, [a, \"\\t\"].concat(s)), a;\n              }\n            }, {\n              key: \"updateCaretPos\",\n              value: function value(t, e) {\n                var n = this.updateCaretPosAction(t, e);\n                this.dispatch(function (t) {\n                  t.setCaretPosition(n);\n                });\n              }\n            }, {\n              key: \"updateCaretPosAction\",\n              value: function value(t, e) {\n                var n = this.getOptions(),\n                    o = this.getCaretPosition();\n                return e ? o > 0 && (o -= t) : o += t, n.debug && console.log(\"Caret at:\", o, \"(\".concat(this.keyboardDOMClass, \")\")), o;\n              }\n            }, {\n              key: \"addStringAt\",\n              value: function value(t, e) {\n                var n,\n                    o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t.length,\n                    i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : t.length,\n                    r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n                return o || 0 === o ? (n = [t.slice(0, o), e, t.slice(i)].join(\"\"), this.isMaxLengthReached() || r && this.updateCaretPos(e.length)) : n = t + e, n;\n              }\n            }, {\n              key: \"removeAt\",\n              value: function value(t) {\n                var e,\n                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t.length,\n                    o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t.length,\n                    i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n                if (0 === n && 0 === o) return t;\n\n                if (n === o) {\n                  var r = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\n                  n && n >= 0 ? t.substring(n - 2, n).match(r) ? (e = t.substr(0, n - 2) + t.substr(n), i && this.updateCaretPos(2, !0)) : (e = t.substr(0, n - 1) + t.substr(n), i && this.updateCaretPos(1, !0)) : t.slice(-2).match(r) ? (e = t.slice(0, -2), i && this.updateCaretPos(2, !0)) : (e = t.slice(0, -1), i && this.updateCaretPos(1, !0));\n                } else e = t.slice(0, n) + t.slice(o), i && this.dispatch(function (t) {\n                  t.setCaretPosition(n);\n                });\n\n                return e;\n              }\n            }, {\n              key: \"handleMaxLength\",\n              value: function value(t, e) {\n                var n = this.getOptions(),\n                    o = n.maxLength,\n                    i = t[n.inputName],\n                    r = e.length - 1 >= o;\n                if (e.length <= i.length) return !1;\n                if (Number.isInteger(o)) return n.debug && console.log(\"maxLength (num) reached:\", r), r ? (this.maxLengthReached = !0, !0) : (this.maxLengthReached = !1, !1);\n\n                if (\"object\" === _typeof(o)) {\n                  var s = e.length - 1 >= o[n.inputName];\n                  return n.debug && console.log(\"maxLength (obj) reached:\", s), s ? (this.maxLengthReached = !0, !0) : (this.maxLengthReached = !1, !1);\n                }\n              }\n            }, {\n              key: \"isMaxLengthReached\",\n              value: function value() {\n                return Boolean(this.maxLengthReached);\n              }\n            }, {\n              key: \"isTouchDevice\",\n              value: function value() {\n                return \"ontouchstart\" in window || navigator.maxTouchPoints;\n              }\n            }, {\n              key: \"pointerEventsSupported\",\n              value: function value() {\n                return window.PointerEvent;\n              }\n            }, {\n              key: \"camelCase\",\n              value: function value(t) {\n                return !!t && t.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce(function (t, e) {\n                  return e.length ? t + e[0].toUpperCase() + e.slice(1) : t;\n                });\n              }\n            }]) && _defineProperties(t.prototype, e), n && _defineProperties(t, n), Utilities;\n          }();\n\n          r = function r() {}, (i = \"noop\") in (o = s) ? Object.defineProperty(o, i, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n          }) : o[i] = r;\n          var u = s;\n\n          function PhysicalKeyboard_defineProperties(t, e) {\n            for (var n = 0; n < e.length; n++) {\n              var o = e[n];\n              o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n            }\n          }\n\n          var c = function () {\n            function PhysicalKeyboard(t) {\n              var e = t.dispatch,\n                  n = t.getOptions;\n              !function (t, e) {\n                if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n              }(this, PhysicalKeyboard), this.dispatch = e, this.getOptions = n, u.bindMethods(PhysicalKeyboard, this);\n            }\n\n            var t, e;\n            return t = PhysicalKeyboard, (e = [{\n              key: \"handleHighlightKeyDown\",\n              value: function value(t) {\n                var e = this.getOptions(),\n                    n = this.getSimpleKeyboardLayoutKey(t);\n                this.dispatch(function (t) {\n                  var o = t.getButtonElement(n) || t.getButtonElement(\"{\".concat(n, \"}\"));\n                  o && (o.style.backgroundColor = e.physicalKeyboardHighlightBgColor || \"#dadce4\", o.style.color = e.physicalKeyboardHighlightTextColor || \"black\", e.physicalKeyboardHighlightPress && (o.onpointerdown || o.onmousedown || o.ontouchstart || u.noop)());\n                });\n              }\n            }, {\n              key: \"handleHighlightKeyUp\",\n              value: function value(t) {\n                var e = this.getOptions(),\n                    n = this.getSimpleKeyboardLayoutKey(t);\n                this.dispatch(function (t) {\n                  var o = t.getButtonElement(n) || t.getButtonElement(\"{\".concat(n, \"}\"));\n                  o && o.removeAttribute && (o.removeAttribute(\"style\"), e.physicalKeyboardHighlightPress && (o.onpointerup || o.onmouseup || o.ontouchend || u.noop)());\n                });\n              }\n            }, {\n              key: \"getSimpleKeyboardLayoutKey\",\n              value: function value(t) {\n                var e;\n                return ((e = t.code.includes(\"Numpad\") || t.code.includes(\"Shift\") || t.code.includes(\"Space\") || t.code.includes(\"Backspace\") || t.code.includes(\"Control\") || t.code.includes(\"Alt\") || t.code.includes(\"Meta\") ? t.code : t.key) !== e.toUpperCase() || \"F\" === t.code[0] && Number.isInteger(Number(t.code[1])) && t.code.length <= 3) && (e = e.toLowerCase()), e;\n              }\n            }]) && PhysicalKeyboard_defineProperties(t.prototype, e), PhysicalKeyboard;\n          }();\n\n          function _toConsumableArray(t) {\n            return function (t) {\n              if (Array.isArray(t)) return Keyboard_arrayLikeToArray(t);\n            }(t) || function (t) {\n              if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);\n            }(t) || function (t, e) {\n              if (t) {\n                if (\"string\" === typeof t) return Keyboard_arrayLikeToArray(t, e);\n                var n = Object.prototype.toString.call(t).slice(8, -1);\n                return \"Object\" === n && t.constructor && (n = t.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(t) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Keyboard_arrayLikeToArray(t, e) : void 0;\n              }\n            }(t) || function () {\n              throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n            }();\n          }\n\n          function Keyboard_arrayLikeToArray(t, e) {\n            (null == e || e > t.length) && (e = t.length);\n\n            for (var n = 0, o = new Array(e); n < e; n++) {\n              o[n] = t[n];\n            }\n\n            return o;\n          }\n\n          function Keyboard_classCallCheck(t, e) {\n            if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n          }\n\n          function Keyboard_defineProperties(t, e) {\n            for (var n = 0; n < e.length; n++) {\n              var o = e[n];\n              o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n            }\n          }\n\n          function Keyboard_defineProperty(t, e, n) {\n            return e in t ? Object.defineProperty(t, e, {\n              value: n,\n              enumerable: !0,\n              configurable: !0,\n              writable: !0\n            }) : t[e] = n, t;\n          }\n\n          var l = function () {\n            function SimpleKeyboard() {\n              var t = this;\n              Keyboard_classCallCheck(this, SimpleKeyboard), Keyboard_defineProperty(this, \"handleParams\", function (t) {\n                var e, n, o;\n                if (\"string\" === typeof t[0]) e = t[0].split(\".\").join(\"\"), n = document.querySelector(\".\".concat(e)), o = t[1];else if (t[0] instanceof HTMLDivElement) {\n                  if (!t[0].className) throw console.warn(\"Any DOM element passed as parameter must have a class.\"), new Error(\"KEYBOARD_DOM_CLASS_ERROR\");\n                  e = t[0].className.split(\" \")[0], n = t[0], o = t[1];\n                } else e = \"simple-keyboard\", n = document.querySelector(\".\".concat(e)), o = t[0];\n                return {\n                  keyboardDOMClass: e,\n                  keyboardDOM: n,\n                  options: o\n                };\n              }), Keyboard_defineProperty(this, \"getOptions\", function () {\n                return t.options;\n              }), Keyboard_defineProperty(this, \"getCaretPosition\", function () {\n                return t.caretPosition;\n              }), Keyboard_defineProperty(this, \"getCaretPositionEnd\", function () {\n                return t.caretPositionEnd;\n              }), Keyboard_defineProperty(this, \"registerModule\", function (e, n) {\n                t.modules[e] || (t.modules[e] = {}), n(t.modules[e]);\n              }), Keyboard_defineProperty(this, \"getKeyboardClassString\", function () {\n                for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++) {\n                  n[o] = arguments[o];\n                }\n\n                var i = [t.keyboardDOMClass].concat(n).filter(function (t) {\n                  return !!t;\n                });\n                return i.join(\" \");\n              });\n\n              for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++) {\n                n[o] = arguments[o];\n              }\n\n              var i = this.handleParams(n),\n                  r = i.keyboardDOMClass,\n                  s = i.keyboardDOM,\n                  a = i.options,\n                  l = void 0 === a ? {} : a;\n              if (this.utilities = new u({\n                getOptions: this.getOptions,\n                getCaretPosition: this.getCaretPosition,\n                getCaretPositionEnd: this.getCaretPositionEnd,\n                dispatch: this.dispatch\n              }), this.caretPosition = null, this.caretPositionEnd = null, this.keyboardDOM = s, this.options = l, this.options.layoutName = this.options.layoutName || \"default\", this.options.theme = this.options.theme || \"hg-theme-default\", this.options.inputName = this.options.inputName || \"default\", this.options.preventMouseDownDefault = this.options.preventMouseDownDefault || !1, this.keyboardPluginClasses = \"\", u.bindMethods(SimpleKeyboard, this), this.input = {}, this.input[this.options.inputName] = \"\", this.keyboardDOMClass = r, this.buttonElements = {}, window.SimpleKeyboardInstances || (window.SimpleKeyboardInstances = {}), this.currentInstanceName = this.utilities.camelCase(this.keyboardDOMClass), window.SimpleKeyboardInstances[this.currentInstanceName] = this, this.allKeyboardInstances = window.SimpleKeyboardInstances, this.keyboardInstanceNames = Object.keys(window.SimpleKeyboardInstances), this.isFirstKeyboardInstance = this.keyboardInstanceNames[0] === this.currentInstanceName, this.physicalKeyboard = new c({\n                dispatch: this.dispatch,\n                getOptions: this.getOptions\n              }), !this.keyboardDOM) throw console.warn('\".'.concat(r, '\" was not found in the DOM.')), new Error(\"KEYBOARD_DOM_ERROR\");\n              this.render(), this.modules = {}, this.loadModules();\n            }\n\n            var t, e;\n            return t = SimpleKeyboard, (e = [{\n              key: \"setCaretPosition\",\n              value: function value(t, e) {\n                this.caretPosition = t, this.caretPositionEnd = e || t;\n              }\n            }, {\n              key: \"handleButtonClicked\",\n              value: function value(t) {\n                var e = this.options.debug;\n                if (\"{//}\" === t) return !1;\n                \"function\" === typeof this.options.onKeyPress && this.options.onKeyPress(t), this.input[this.options.inputName] || (this.input[this.options.inputName] = \"\");\n                var n = this.utilities.getUpdatedInput(t, this.input[this.options.inputName], this.caretPosition, this.caretPositionEnd);\n\n                if (this.input[this.options.inputName] !== n && (!this.options.inputPattern || this.options.inputPattern && this.inputPatternIsValid(n))) {\n                  if (this.options.maxLength && this.utilities.handleMaxLength(this.input, n)) return !1;\n                  this.input[this.options.inputName] = this.utilities.getUpdatedInput(t, this.input[this.options.inputName], this.caretPosition, this.caretPositionEnd, !0), e && console.log(\"Input changed:\", this.getAllInputs()), this.options.debug && console.log(\"Caret at: \", this.getCaretPosition(), this.getCaretPositionEnd(), \"(\".concat(this.keyboardDOMClass, \")\")), this.options.syncInstanceInputs && this.syncInstanceInputs(), \"function\" === typeof this.options.onChange && this.options.onChange(this.getInput(this.options.inputName, !0)), \"function\" === typeof this.options.onChangeAll && this.options.onChangeAll(this.getAllInputs());\n                }\n\n                e && console.log(\"Key pressed:\", t);\n              }\n            }, {\n              key: \"handleButtonMouseDown\",\n              value: function value(t, e) {\n                var n = this;\n                this.options.preventMouseDownDefault && e.preventDefault(), this.options.stopMouseDownPropagation && e.stopPropagation(), e && e.target.classList.add(this.activeButtonClass), this.holdInteractionTimeout && clearTimeout(this.holdInteractionTimeout), this.holdTimeout && clearTimeout(this.holdTimeout), this.isMouseHold = !0, this.options.disableButtonHold || (this.holdTimeout = setTimeout(function () {\n                  (n.isMouseHold && (!t.includes(\"{\") && !t.includes(\"}\") || \"{delete}\" === t || \"{backspace}\" === t || \"{bksp}\" === t || \"{space}\" === t || \"{tab}\" === t) || \"{arrowright}\" === t || \"{arrowleft}\" === t || \"{arrowup}\" === t || \"{arrowdown}\" === t) && (n.options.debug && console.log(\"Button held:\", t), n.handleButtonHold(t, e)), clearTimeout(n.holdTimeout);\n                }, 500));\n              }\n            }, {\n              key: \"handleButtonMouseUp\",\n              value: function value() {\n                var t = this,\n                    e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,\n                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n                n && (this.options.preventMouseUpDefault && n.preventDefault(), this.options.stopMouseUpPropagation && n.stopPropagation()), this.recurseButtons(function (e) {\n                  e.classList.remove(t.activeButtonClass);\n                }), this.isMouseHold = !1, this.holdInteractionTimeout && clearTimeout(this.holdInteractionTimeout), e && \"function\" === typeof this.options.onKeyReleased && this.options.onKeyReleased(e);\n              }\n            }, {\n              key: \"handleKeyboardContainerMouseDown\",\n              value: function value(t) {\n                this.options.preventMouseDownDefault && t.preventDefault();\n              }\n            }, {\n              key: \"handleButtonHold\",\n              value: function value(t) {\n                var e = this;\n                this.holdInteractionTimeout && clearTimeout(this.holdInteractionTimeout), this.holdInteractionTimeout = setTimeout(function () {\n                  e.isMouseHold ? (e.handleButtonClicked(t), e.handleButtonHold(t)) : clearTimeout(e.holdInteractionTimeout);\n                }, 100);\n              }\n            }, {\n              key: \"syncInstanceInputs\",\n              value: function value() {\n                var t = this;\n                this.dispatch(function (e) {\n                  e.replaceInput(t.input), e.setCaretPosition(t.caretPosition, t.caretPositionEnd);\n                });\n              }\n            }, {\n              key: \"clearInput\",\n              value: function value(t) {\n                t = t || this.options.inputName, this.input[t] = \"\", this.setCaretPosition(0), this.options.syncInstanceInputs && this.syncInstanceInputs();\n              }\n            }, {\n              key: \"getInput\",\n              value: function value(t) {\n                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n\n                if (t = t || this.options.inputName, this.options.syncInstanceInputs && !e && this.syncInstanceInputs(), this.options.rtl) {\n                  var n = this.input[t].replace(\"\\u202b\", \"\").replace(\"\\u202c\", \"\");\n                  return \"\\u202b\" + n + \"\\u202c\";\n                }\n\n                return this.input[t];\n              }\n            }, {\n              key: \"getAllInputs\",\n              value: function value() {\n                var t = this,\n                    e = {};\n                return Object.keys(this.input).forEach(function (n) {\n                  e[n] = t.getInput(n, !0);\n                }), e;\n              }\n            }, {\n              key: \"setInput\",\n              value: function value(t, e) {\n                e = e || this.options.inputName, this.input[e] = t, this.options.syncInstanceInputs && this.syncInstanceInputs();\n              }\n            }, {\n              key: \"replaceInput\",\n              value: function value(t) {\n                this.input = t;\n              }\n            }, {\n              key: \"setOptions\",\n              value: function value() {\n                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n                    e = this.changedOptions(t);\n                this.options = Object.assign(this.options, t), e.length && (this.options.debug && console.log(\"changedOptions\", e), this.onSetOptions(t), this.render());\n              }\n            }, {\n              key: \"changedOptions\",\n              value: function value(t) {\n                var e = this;\n                return Object.keys(t).filter(function (n) {\n                  return JSON.stringify(t[n]) !== JSON.stringify(e.options[n]);\n                });\n              }\n            }, {\n              key: \"onSetOptions\",\n              value: function value(t) {\n                t.inputName && (this.options.debug && console.log(\"inputName changed. caretPosition reset.\"), this.setCaretPosition(null));\n              }\n            }, {\n              key: \"clear\",\n              value: function value() {\n                this.keyboardDOM.innerHTML = \"\", this.keyboardDOM.className = this.keyboardDOMClass, this.buttonElements = {};\n              }\n            }, {\n              key: \"dispatch\",\n              value: function value(t) {\n                if (!window.SimpleKeyboardInstances) throw console.warn(\"SimpleKeyboardInstances is not defined. Dispatch cannot be called.\"), new Error(\"INSTANCES_VAR_ERROR\");\n                return Object.keys(window.SimpleKeyboardInstances).forEach(function (e) {\n                  t(window.SimpleKeyboardInstances[e], e);\n                });\n              }\n            }, {\n              key: \"addButtonTheme\",\n              value: function value(t, e) {\n                var n = this;\n                if (!e || !t) return !1;\n                t.split(\" \").forEach(function (o) {\n                  e.split(\" \").forEach(function (e) {\n                    n.options.buttonTheme || (n.options.buttonTheme = []);\n                    var i = !1;\n                    n.options.buttonTheme.map(function (t) {\n                      if (t.class.split(\" \").includes(e)) {\n                        i = !0;\n                        var n = t.buttons.split(\" \");\n                        n.includes(o) || (i = !0, n.push(o), t.buttons = n.join(\" \"));\n                      }\n\n                      return t;\n                    }), i || n.options.buttonTheme.push({\n                      class: e,\n                      buttons: t\n                    });\n                  });\n                }), this.render();\n              }\n            }, {\n              key: \"removeButtonTheme\",\n              value: function value(t, e) {\n                var n = this;\n                if (!t && !e) return this.options.buttonTheme = [], this.render(), !1;\n                t && Array.isArray(this.options.buttonTheme) && this.options.buttonTheme.length && (t.split(\" \").forEach(function (t) {\n                  n.options.buttonTheme.map(function (o, i) {\n                    if (e && e.includes(o.class) || !e) {\n                      var r = o.buttons.split(\" \").filter(function (e) {\n                        return e !== t;\n                      });\n                      r.length ? o.buttons = r.join(\" \") : (n.options.buttonTheme.splice(i, 1), o = null);\n                    }\n\n                    return o;\n                  });\n                }), this.render());\n              }\n            }, {\n              key: \"getButtonElement\",\n              value: function value(t) {\n                var e,\n                    n = this.buttonElements[t];\n                return n && (e = n.length > 1 ? n : n[0]), e;\n              }\n            }, {\n              key: \"inputPatternIsValid\",\n              value: function value(t) {\n                var e,\n                    n = this.options.inputPattern;\n\n                if ((e = n instanceof RegExp ? n : n[this.options.inputName]) && t) {\n                  var o = e.test(t);\n                  return this.options.debug && console.log('inputPattern (\"'.concat(e, '\"): ').concat(o ? \"passed\" : \"did not pass!\")), o;\n                }\n\n                return !0;\n              }\n            }, {\n              key: \"setEventListeners\",\n              value: function value() {\n                !this.isFirstKeyboardInstance && this.allKeyboardInstances || (this.options.debug && console.log(\"Caret handling started (\".concat(this.keyboardDOMClass, \")\")), document.addEventListener(\"keyup\", this.handleKeyUp), document.addEventListener(\"keydown\", this.handleKeyDown), document.addEventListener(\"mouseup\", this.handleMouseUp), document.addEventListener(\"touchend\", this.handleTouchEnd));\n              }\n            }, {\n              key: \"handleKeyUp\",\n              value: function value(t) {\n                this.caretEventHandler(t), this.options.physicalKeyboardHighlight && this.physicalKeyboard.handleHighlightKeyUp(t);\n              }\n            }, {\n              key: \"handleKeyDown\",\n              value: function value(t) {\n                this.options.physicalKeyboardHighlight && this.physicalKeyboard.handleHighlightKeyDown(t);\n              }\n            }, {\n              key: \"handleMouseUp\",\n              value: function value(t) {\n                this.caretEventHandler(t);\n              }\n            }, {\n              key: \"handleTouchEnd\",\n              value: function value(t) {\n                this.caretEventHandler(t);\n              }\n            }, {\n              key: \"caretEventHandler\",\n              value: function value(t) {\n                var e;\n                t.target.tagName && (e = t.target.tagName.toLowerCase()), this.dispatch(function (n) {\n                  var o = t.target === n.keyboardDOM || t.target && n.keyboardDOM.contains(t.target);\n                  n.isMouseHold && (n.isMouseHold = !1), \"textarea\" !== e && \"input\" !== e || n.options.disableCaretPositioning ? !n.options.disableCaretPositioning && o || n.setCaretPosition(null) : (n.setCaretPosition(t.target.selectionStart, t.target.selectionEnd), n.options.debug && console.log(\"Caret at: \", n.getCaretPosition(), n.getCaretPositionEnd(), t && t.target.tagName.toLowerCase(), \"(\".concat(n.keyboardDOMClass, \")\")));\n                });\n              }\n            }, {\n              key: \"recurseButtons\",\n              value: function value(t) {\n                var e = this;\n                if (!t) return !1;\n                Object.keys(this.buttonElements).forEach(function (n) {\n                  return e.buttonElements[n].forEach(t);\n                });\n              }\n            }, {\n              key: \"destroy\",\n              value: function value() {\n                this.options.debug && console.log(\"Destroying simple-keyboard instance: \".concat(this.currentInstanceName)), document.removeEventListener(\"keyup\", this.handleKeyUp), document.removeEventListener(\"keydown\", this.handleKeyDown), document.removeEventListener(\"mouseup\", this.handleMouseUp), document.removeEventListener(\"touchend\", this.handleTouchEnd), document.onpointerup = null, document.ontouchend = null, document.ontouchcancel = null, document.onmouseup = null;\n\n                var deleteButton = function deleteButton(t) {\n                  t.onpointerdown = null, t.onpointerup = null, t.onpointercancel = null, t.ontouchstart = null, t.ontouchend = null, t.ontouchcancel = null, t.onclick = null, t.onmousedown = null, t.onmouseup = null, t.remove(), t = null;\n                };\n\n                this.recurseButtons(deleteButton), this.recurseButtons = null, deleteButton = null, this.keyboardDOM.onpointerdown = null, this.keyboardDOM.ontouchstart = null, this.keyboardDOM.onmousedown = null, this.clear(), window.SimpleKeyboardInstances[this.currentInstanceName] = null, delete window.SimpleKeyboardInstances[this.currentInstanceName], this.initialized = !1;\n              }\n            }, {\n              key: \"getButtonThemeClasses\",\n              value: function value(t) {\n                var e = this.options.buttonTheme,\n                    n = [];\n                return Array.isArray(e) && e.forEach(function (e) {\n                  if (e.class && \"string\" === typeof e.class && e.buttons && \"string\" === typeof e.buttons) {\n                    var o = e.class.split(\" \");\n                    e.buttons.split(\" \").includes(t) && (n = [].concat(_toConsumableArray(n), _toConsumableArray(o)));\n                  } else console.warn('Incorrect \"buttonTheme\". Please check the documentation.', e);\n                }), n;\n              }\n            }, {\n              key: \"setDOMButtonAttributes\",\n              value: function value(t, e) {\n                var n = this.options.buttonAttributes;\n                Array.isArray(n) && n.forEach(function (n) {\n                  n.attribute && \"string\" === typeof n.attribute && n.value && \"string\" === typeof n.value && n.buttons && \"string\" === typeof n.buttons ? n.buttons.split(\" \").includes(t) && e(n.attribute, n.value) : console.warn('Incorrect \"buttonAttributes\". Please check the documentation.', n);\n                });\n              }\n            }, {\n              key: \"onTouchDeviceDetected\",\n              value: function value() {\n                this.processAutoTouchEvents(), this.disableContextualWindow();\n              }\n            }, {\n              key: \"disableContextualWindow\",\n              value: function value() {\n                window.oncontextmenu = function (t) {\n                  if (t.target.classList.contains(\"hg-button\")) return t.preventDefault(), t.stopPropagation(), !1;\n                };\n              }\n            }, {\n              key: \"processAutoTouchEvents\",\n              value: function value() {\n                this.options.autoUseTouchEvents && (this.options.useTouchEvents = !0, this.options.debug && console.log(\"autoUseTouchEvents: Touch device detected, useTouchEvents enabled.\"));\n              }\n            }, {\n              key: \"onInit\",\n              value: function value() {\n                this.options.debug && console.log(\"\".concat(this.keyboardDOMClass, \" Initialized\")), this.setEventListeners(), \"function\" === typeof this.options.onInit && this.options.onInit();\n              }\n            }, {\n              key: \"beforeFirstRender\",\n              value: function value() {\n                this.utilities.isTouchDevice() && this.onTouchDeviceDetected(), \"function\" === typeof this.options.beforeFirstRender && this.options.beforeFirstRender(), this.isFirstKeyboardInstance && this.utilities.pointerEventsSupported() && !this.options.useTouchEvents && !this.options.useMouseEvents && this.options.debug && console.log(\"Using PointerEvents as it is supported by this browser\"), this.options.useTouchEvents && this.options.debug && console.log(\"useTouchEvents has been enabled. Only touch events will be used.\");\n              }\n            }, {\n              key: \"beforeRender\",\n              value: function value() {\n                \"function\" === typeof this.options.beforeRender && this.options.beforeRender();\n              }\n            }, {\n              key: \"onRender\",\n              value: function value() {\n                \"function\" === typeof this.options.onRender && this.options.onRender();\n              }\n            }, {\n              key: \"onModulesLoaded\",\n              value: function value() {\n                \"function\" === typeof this.options.onModulesLoaded && this.options.onModulesLoaded(this);\n              }\n            }, {\n              key: \"loadModules\",\n              value: function value() {\n                var t = this;\n                Array.isArray(this.options.modules) && (this.options.modules.forEach(function (e) {\n                  new e().init(t);\n                }), this.keyboardPluginClasses = \"modules-loaded\", this.render(), this.onModulesLoaded());\n              }\n            }, {\n              key: \"getModuleProp\",\n              value: function value(t, e) {\n                return !!this.modules[t] && this.modules[t][e];\n              }\n            }, {\n              key: \"getModulesList\",\n              value: function value() {\n                return Object.keys(this.modules);\n              }\n            }, {\n              key: \"parseRowDOMContainers\",\n              value: function value(t, e, n, o) {\n                var i = this,\n                    r = Array.from(t.children),\n                    s = 0;\n                return r.length && n.forEach(function (n, a) {\n                  var u = o[a];\n                  if (!u || !(u > n)) return !1;\n                  var c = n - s,\n                      l = u - s,\n                      p = document.createElement(\"div\");\n                  p.className += \"hg-button-container\";\n                  var h = \"\".concat(i.options.layoutName, \"-r\").concat(e, \"c\").concat(a);\n                  p.setAttribute(\"data-skUID\", h);\n                  var d = r.splice(c, l - c + 1);\n                  s = l - c, d.forEach(function (t) {\n                    return p.appendChild(t);\n                  }), r.splice(c, 0, p), t.innerHTML = \"\", r.forEach(function (e) {\n                    return t.appendChild(e);\n                  }), i.options.debug && console.log(\"rowDOMContainer\", d, c, l, s + 1);\n                }), t;\n              }\n            }, {\n              key: \"render\",\n              value: function value() {\n                var t = this;\n                this.clear(), this.initialized || this.beforeFirstRender(), this.beforeRender();\n                var e = \"hg-layout-\".concat(this.options.layoutName),\n                    n = this.options.layout || {\n                  default: [\"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\", \"{tab} q w e r t y u i o p [ ] \\\\\", \"{lock} a s d f g h j k l ; ' {enter}\", \"{shift} z x c v b n m , . / {shift}\", \".com @ {space}\"],\n                  shift: [\"~ ! @ # $ % ^ & * ( ) _ + {bksp}\", \"{tab} Q W E R T Y U I O P { } |\", '{lock} A S D F G H J K L : \" {enter}', \"{shift} Z X C V B N M < > ? {shift}\", \".com @ {space}\"]\n                },\n                    o = this.options.useTouchEvents || !1,\n                    i = o ? \"hg-touch-events\" : \"\",\n                    r = this.options.useMouseEvents || !1,\n                    s = this.options.disableRowButtonContainers;\n                this.keyboardDOM.className = this.getKeyboardClassString(this.options.theme, e, this.keyboardPluginClasses, i), n[this.options.layoutName].forEach(function (e, n) {\n                  var i = e.split(\" \"),\n                      a = document.createElement(\"div\");\n                  a.className += \"hg-row\";\n                  var u = [],\n                      c = [];\n                  i.forEach(function (e, i) {\n                    var l,\n                        p = !s && \"string\" === typeof e && e.length > 1 && 0 === e.indexOf(\"[\"),\n                        h = !s && \"string\" === typeof e && e.length > 1 && e.indexOf(\"]\") === e.length - 1;\n                    p && (u.push(i), e = e.replace(/\\[/g, \"\")), h && (c.push(i), e = e.replace(/\\]/g, \"\"));\n                    var d = t.utilities.getButtonClass(e),\n                        f = t.utilities.getButtonDisplayName(e, t.options.display, t.options.mergeDisplay),\n                        y = t.options.useButtonTag ? \"button\" : \"div\",\n                        b = document.createElement(y);\n                    b.className += \"hg-button \".concat(d), (l = b.classList).add.apply(l, _toConsumableArray(t.getButtonThemeClasses(e))), t.setDOMButtonAttributes(e, function (t, e) {\n                      b.setAttribute(t, e);\n                    }), t.activeButtonClass = \"hg-activeButton\", !t.utilities.pointerEventsSupported() || o || r ? o ? (b.ontouchstart = function (n) {\n                      t.handleButtonClicked(e), t.handleButtonMouseDown(e, n);\n                    }, b.ontouchend = function (n) {\n                      t.handleButtonMouseUp(e, n);\n                    }, b.ontouchcancel = function (n) {\n                      t.handleButtonMouseUp(e, n);\n                    }) : (b.onclick = function () {\n                      t.isMouseHold = !1, t.handleButtonClicked(e);\n                    }, b.onmousedown = function (n) {\n                      t.handleButtonMouseDown(e, n);\n                    }, b.onmouseup = function (n) {\n                      t.handleButtonMouseUp(e, n);\n                    }) : (b.onpointerdown = function (n) {\n                      t.handleButtonClicked(e), t.handleButtonMouseDown(e, n);\n                    }, b.onpointerup = function (n) {\n                      t.handleButtonMouseUp(e, n);\n                    }, b.onpointercancel = function (n) {\n                      t.handleButtonMouseUp(e, n);\n                    }), b.setAttribute(\"data-skBtn\", e);\n                    var m = \"\".concat(t.options.layoutName, \"-r\").concat(n, \"b\").concat(i);\n                    b.setAttribute(\"data-skBtnUID\", m);\n                    var g = document.createElement(\"span\");\n                    g.innerHTML = f, b.appendChild(g), t.buttonElements[e] || (t.buttonElements[e] = []), t.buttonElements[e].push(b), a.appendChild(b);\n                  }), a = t.parseRowDOMContainers(a, n, u, c), t.keyboardDOM.appendChild(a);\n                }), this.onRender(), this.initialized || (this.initialized = !0, !this.utilities.pointerEventsSupported() || o || r ? o ? (document.ontouchend = function () {\n                  return t.handleButtonMouseUp();\n                }, document.ontouchcancel = function () {\n                  return t.handleButtonMouseUp();\n                }, this.keyboardDOM.ontouchstart = function (e) {\n                  return t.handleKeyboardContainerMouseDown(e);\n                }) : o || (document.onmouseup = function () {\n                  return t.handleButtonMouseUp();\n                }, this.keyboardDOM.onmousedown = function (e) {\n                  return t.handleKeyboardContainerMouseDown(e);\n                }) : (document.onpointerup = function () {\n                  return t.handleButtonMouseUp();\n                }, this.keyboardDOM.onpointerdown = function (e) {\n                  return t.handleKeyboardContainerMouseDown(e);\n                }), this.onInit());\n              }\n            }]) && Keyboard_defineProperties(t.prototype, e), SimpleKeyboard;\n          }();\n\n          e.default = l;\n        }]);\n      }, \"object\" === a(e) && \"object\" === a(t) ? t.exports = s() : (i = [], void 0 === (r = \"function\" === typeof (o = s) ? o.apply(e, i) : o) || (t.exports = r));\n    }).call(this, n(4)(t));\n  }, function (t, e, n) {\n    t.exports = n(6)();\n  }, function (t, e, n) {\n    t.exports = n(8);\n  }, function (t, e) {\n    t.exports = function (t) {\n      return t.webpackPolyfill || (t.deprecate = function () {}, t.paths = [], t.children || (t.children = []), Object.defineProperty(t, \"loaded\", {\n        enumerable: !0,\n        get: function get() {\n          return t.l;\n        }\n      }), Object.defineProperty(t, \"id\", {\n        enumerable: !0,\n        get: function get() {\n          return t.i;\n        }\n      }), t.webpackPolyfill = 1), t;\n    };\n  }, function (t, e) {\n    function _typeof(e) {\n      return \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? t.exports = _typeof = function _typeof(t) {\n        return typeof t;\n      } : t.exports = _typeof = function _typeof(t) {\n        return t && \"function\" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n      }, _typeof(e);\n    }\n\n    t.exports = _typeof;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var o = n(7);\n\n    function emptyFunction() {}\n\n    function emptyFunctionWithReset() {}\n\n    emptyFunctionWithReset.resetWarningCache = emptyFunction, t.exports = function () {\n      function shim(t, e, n, i, r, s) {\n        if (s !== o) {\n          var a = new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");\n          throw a.name = \"Invariant Violation\", a;\n        }\n      }\n\n      function getShim() {\n        return shim;\n      }\n\n      shim.isRequired = shim;\n      var t = {\n        array: shim,\n        bool: shim,\n        func: shim,\n        number: shim,\n        object: shim,\n        string: shim,\n        symbol: shim,\n        any: shim,\n        arrayOf: getShim,\n        element: shim,\n        elementType: shim,\n        instanceOf: getShim,\n        node: shim,\n        objectOf: getShim,\n        oneOf: getShim,\n        oneOfType: getShim,\n        shape: getShim,\n        exact: getShim,\n        checkPropTypes: emptyFunctionWithReset,\n        resetWarningCache: emptyFunction\n      };\n      return t.PropTypes = t, t;\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    t.exports = \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";\n  }, function (t, e, n) {\n    \"use strict\";\n\n    n.r(e);\n    var o = n(0),\n        i = n.n(o),\n        r = n(1),\n        s = n.n(r);\n\n    function ownKeys(t, e) {\n      var n = Object.keys(t);\n\n      if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(t);\n        e && (o = o.filter(function (e) {\n          return Object.getOwnPropertyDescriptor(t, e).enumerable;\n        })), n.push.apply(n, o);\n      }\n\n      return n;\n    }\n\n    function _objectSpread(t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = null != arguments[e] ? arguments[e] : {};\n        e % 2 ? ownKeys(Object(n), !0).forEach(function (e) {\n          _defineProperty(t, e, n[e]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach(function (e) {\n          Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));\n        });\n      }\n\n      return t;\n    }\n\n    function _defineProperty(t, e, n) {\n      return e in t ? Object.defineProperty(t, e, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : t[e] = n, t;\n    }\n\n    var cleanProps = function cleanProps(t) {\n      return _objectSpread(_objectSpread({}, t), {}, {\n        keyboardRef: null,\n        stateToIgnore: null\n      });\n    },\n        a = n(2),\n        Keyboard_KeyboardReact = function Keyboard_KeyboardReact(t) {\n      var e = t.baseClass || \"react-simple-keyboard\",\n          n = Object(o.useRef)(),\n          r = Object(o.useRef)(),\n          a = Object(o.useRef)(t);\n      return Object(o.useEffect)(function () {\n        var o = function (t) {\n          return _objectSpread(_objectSpread({}, t), {}, {\n            theme: \"simple-keyboard \".concat(t.theme || \"hg-theme-default\")\n          });\n        }(t);\n\n        n.current || (n.current = !0, o.debug && console.log(\"ReactSimpleKeyboard: Init\"), r.current = new s.a(\".\".concat(e), o), o.keyboardRef && o.keyboardRef(r.current));\n\n        var i = function (t, e) {\n          var n = cleanProps(e),\n              o = cleanProps(t);\n          return Object.keys(n).filter(function (t) {\n            return n[t] !== o[t];\n          });\n        }(a.current, o);\n\n        if (i.length) {\n          var u = r.current;\n          a.current = o, u.setOptions(o), o.debug && console.log(\"ReactSimpleKeyboard - setOptions called due to updated props:\", i);\n        }\n      }, [n, e, a, t]), i.a.createElement(\"div\", {\n        className: e\n      });\n    };\n\n    Keyboard_KeyboardReact.propTypes = {\n      baseClass: n.n(a).a.string\n    };\n    var u = Keyboard_KeyboardReact;\n    e.default = u;\n  }]);\n});","map":{"version":3,"sources":["../../webpack/universalModuleDefinition","../../webpack/bootstrap","../../external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","../../../../webpack/universalModuleDefinition","../../../../webpack/bootstrap","../../services/Utilities.js","../../services/PhysicalKeyboard.js","../../components/Keyboard.js","../../services/KeyboardLayout.js","../../index.js","../../node_modules/prop-types/index.js","../../node_modules/webpack/buildin/module.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/typeof.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","services/Utilities.js","components/Keyboard.js","index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utilities","getOptions","getCaretPosition","getCaretPositionEnd","dispatch","bindMethods","button","buttonTypeClass","includes","buttonWithoutBraces","replace","buttonNormalized","display","mergeDisplay","assign","getDefaultDiplay","input","caretPos","caretPosEnd","moveCaret","options","commonParams","output","length","removeAt","addStringAt","tabCharOnTab","newLineOnEnter","Number","isInteger","minus","newCaretPos","updateCaretPosAction","instance","setCaretPosition","caretPosition","debug","console","log","keyboardDOMClass","source","str","position","positionEnd","slice","join","isMaxLengthReached","updateCaretPos","emojiMatchedReg","substring","match","substr","inputObj","updatedInput","maxLength","currentInput","inputName","condition","maxLengthReached","Boolean","window","navigator","maxTouchPoints","PointerEvent","myClass","myMethod","getOwnPropertyNames","toLowerCase","trim","split","reduce","word","toUpperCase","PhysicalKeyboard","event","buttonPressed","getSimpleKeyboardLayoutKey","buttonDOM","getButtonElement","style","backgroundColor","physicalKeyboardHighlightBgColor","color","physicalKeyboardHighlightTextColor","physicalKeyboardHighlightPress","onpointerdown","onmousedown","ontouchstart","noop","removeAttribute","onpointerup","onmouseup","ontouchend","code","params","keyboardDOM","handleParams","utilities","caretPositionEnd","layoutName","theme","preventMouseDownDefault","keyboardPluginClasses","SimpleKeyboard","buttonElements","currentInstanceName","camelCase","allKeyboardInstances","keyboardInstanceNames","keys","isFirstKeyboardInstance","physicalKeyboard","render","warn","Error","loadModules","document","querySelector","HTMLDivElement","className","endPosition","onKeyPress","getUpdatedInput","inputPattern","inputPatternIsValid","handleMaxLength","getAllInputs","syncInstanceInputs","onChange","getInput","onChangeAll","e","preventDefault","stopMouseDownPropagation","stopPropagation","target","classList","add","activeButtonClass","holdInteractionTimeout","clearTimeout","holdTimeout","isMouseHold","disableButtonHold","setTimeout","handleButtonHold","preventMouseUpDefault","stopMouseUpPropagation","recurseButtons","buttonElement","remove","onKeyReleased","handleButtonClicked","replaceInput","skipSync","rtl","inputWithoutRTLControl","forEach","changedOptions","onSetOptions","newOptions","filter","JSON","stringify","optionName","innerHTML","callback","buttons","buttonTheme","classNameFound","map","class","classNameItem","buttonThemeArray","push","Array","isArray","index","filteredButtonArray","item","splice","buttonArr","inputVal","inputPatternRaw","RegExp","didInputMatch","test","addEventListener","handleKeyUp","handleKeyDown","handleMouseUp","handleTouchEnd","caretEventHandler","physicalKeyboardHighlight","handleHighlightKeyUp","handleHighlightKeyDown","targetTagName","tagName","isKeyboard","contains","disableCaretPositioning","selectionStart","selectionEnd","fn","buttonName","removeEventListener","ontouchcancel","deleteButton","onpointercancel","onclick","clear","initialized","buttonClasses","themeObj","themeObjClasses","buttonAttributes","attrObj","attribute","processAutoTouchEvents","disableContextualWindow","oncontextmenu","autoUseTouchEvents","useTouchEvents","setEventListeners","onInit","isTouchDevice","onTouchDeviceDetected","beforeFirstRender","pointerEventsSupported","useMouseEvents","beforeRender","onRender","onModulesLoaded","initCallback","KeyboardModule","init","prop","rowDOM","rowIndex","containerStartIndexes","containerEndIndexes","rowDOMArray","from","children","removedElements","startIndex","arrIndex","endIndex","updated_startIndex","updated_endIndex","containerDOM","createElement","containerUID","setAttribute","containedElements","appendChild","element","baseDOMClasses","keyboardClasses","DOMClass","layoutClass","layout","useTouchEventsClass","disableRowButtonContainers","getKeyboardClassString","row","rIndex","rowArray","bIndex","buttonHasContainerStart","indexOf","buttonHasContainerEnd","fctBtnClass","getButtonClass","buttonDisplayName","getButtonDisplayName","buttonType","useButtonTag","getButtonThemeClasses","setDOMButtonAttributes","handleButtonMouseDown","handleButtonMouseUp","buttonUID","buttonSpanDOM","parseRowDOMContainers","handleKeyboardContainerMouseDown","default","shift","webpackPolyfill","deprecate","paths","_typeof","obj","iterator","constructor","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","isRequired","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","cleanProps","sourceObj","keyboardRef","stateToIgnore","prevProps","cleanedProps","cleanedPrevProps","KeyboardReact","cssClass","baseClass","initRef","useRef","previousProps","useEffect","parsedProps","parseProps","current","Keyboard","updatedProps","changedProps","keyboard","setOptions","propTypes"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReactSimpleKeyboard\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactSimpleKeyboard\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactSimpleKeyboard\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleKeyboard\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Utility Service\n */\nclass Utilities {\n  /**\n   * Creates an instance of the Utility service\n   */\n  constructor({ getOptions, getCaretPosition, getCaretPositionEnd, dispatch }) {\n    this.getOptions = getOptions;\n    this.getCaretPosition = getCaretPosition;\n    this.getCaretPositionEnd = getCaretPositionEnd;\n    this.dispatch = dispatch;\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(Utilities, this);\n  }\n\n  /**\n   * Adds default classes to a given button\n   *\n   * @param  {string} button The button's layout name\n   * @return {string} The classes to be added to the button\n   */\n  getButtonClass(button) {\n    const buttonTypeClass =\n      button.includes(\"{\") && button.includes(\"}\") && button !== \"{//}\"\n        ? \"functionBtn\"\n        : \"standardBtn\";\n    const buttonWithoutBraces = button.replace(\"{\", \"\").replace(\"}\", \"\");\n    let buttonNormalized = \"\";\n\n    if (buttonTypeClass !== \"standardBtn\")\n      buttonNormalized = ` hg-button-${buttonWithoutBraces}`;\n\n    return `hg-${buttonTypeClass}${buttonNormalized}`;\n  }\n\n  /**\n   * Default button display labels\n   */\n  getDefaultDiplay() {\n    return {\n      \"{bksp}\": \"backspace\",\n      \"{backspace}\": \"backspace\",\n      \"{enter}\": \"< enter\",\n      \"{shift}\": \"shift\",\n      \"{shiftleft}\": \"shift\",\n      \"{shiftright}\": \"shift\",\n      \"{alt}\": \"alt\",\n      \"{s}\": \"shift\",\n      \"{tab}\": \"tab\",\n      \"{lock}\": \"caps\",\n      \"{capslock}\": \"caps\",\n      \"{accept}\": \"Submit\",\n      \"{space}\": \" \",\n      \"{//}\": \" \",\n      \"{esc}\": \"esc\",\n      \"{escape}\": \"esc\",\n      \"{f1}\": \"f1\",\n      \"{f2}\": \"f2\",\n      \"{f3}\": \"f3\",\n      \"{f4}\": \"f4\",\n      \"{f5}\": \"f5\",\n      \"{f6}\": \"f6\",\n      \"{f7}\": \"f7\",\n      \"{f8}\": \"f8\",\n      \"{f9}\": \"f9\",\n      \"{f10}\": \"f10\",\n      \"{f11}\": \"f11\",\n      \"{f12}\": \"f12\",\n      \"{numpaddivide}\": \"/\",\n      \"{numlock}\": \"lock\",\n      \"{arrowup}\": \"↑\",\n      \"{arrowleft}\": \"←\",\n      \"{arrowdown}\": \"↓\",\n      \"{arrowright}\": \"→\",\n      \"{prtscr}\": \"print\",\n      \"{scrolllock}\": \"scroll\",\n      \"{pause}\": \"pause\",\n      \"{insert}\": \"ins\",\n      \"{home}\": \"home\",\n      \"{pageup}\": \"up\",\n      \"{delete}\": \"del\",\n      \"{end}\": \"end\",\n      \"{pagedown}\": \"down\",\n      \"{numpadmultiply}\": \"*\",\n      \"{numpadsubtract}\": \"-\",\n      \"{numpadadd}\": \"+\",\n      \"{numpadenter}\": \"enter\",\n      \"{period}\": \".\",\n      \"{numpaddecimal}\": \".\",\n      \"{numpad0}\": \"0\",\n      \"{numpad1}\": \"1\",\n      \"{numpad2}\": \"2\",\n      \"{numpad3}\": \"3\",\n      \"{numpad4}\": \"4\",\n      \"{numpad5}\": \"5\",\n      \"{numpad6}\": \"6\",\n      \"{numpad7}\": \"7\",\n      \"{numpad8}\": \"8\",\n      \"{numpad9}\": \"9\"\n    };\n  }\n  /**\n   * Returns the display (label) name for a given button\n   *\n   * @param  {string} button The button's layout name\n   * @param  {object} display The provided display option\n   * @param  {boolean} mergeDisplay Whether the provided param value should be merged with the default one.\n   */\n  getButtonDisplayName(button, display, mergeDisplay) {\n    if (mergeDisplay) {\n      display = Object.assign({}, this.getDefaultDiplay(), display);\n    } else {\n      display = display || this.getDefaultDiplay();\n    }\n\n    return display[button] || button;\n  }\n\n  /**\n   * Returns the updated input resulting from clicking a given button\n   *\n   * @param  {string} button The button's layout name\n   * @param  {string} input The input string\n   * @param  {number} caretPos The cursor's current position\n   * @param  {number} caretPosEnd The cursor's current end position\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  getUpdatedInput(\n    button,\n    input,\n    caretPos,\n    caretPosEnd = caretPos,\n    moveCaret = false\n  ) {\n    const options = this.getOptions();\n    const commonParams = [caretPos, caretPosEnd, moveCaret];\n\n    let output = input;\n\n    if (\n      (button === \"{bksp}\" || button === \"{backspace}\") &&\n      output.length > 0\n    ) {\n      output = this.removeAt(output, ...commonParams);\n    } else if (button === \"{space}\")\n      output = this.addStringAt(output, \" \", ...commonParams);\n    else if (\n      button === \"{tab}\" &&\n      !(\n        typeof options.tabCharOnTab === \"boolean\" &&\n        options.tabCharOnTab === false\n      )\n    ) {\n      output = this.addStringAt(output, \"\\t\", ...commonParams);\n    } else if (\n      (button === \"{enter}\" || button === \"{numpadenter}\") &&\n      options.newLineOnEnter\n    )\n      output = this.addStringAt(output, \"\\n\", ...commonParams);\n    else if (\n      button.includes(\"numpad\") &&\n      Number.isInteger(Number(button[button.length - 2]))\n    ) {\n      output = this.addStringAt(\n        output,\n        button[button.length - 2],\n        ...commonParams\n      );\n    } else if (button === \"{numpaddivide}\")\n      output = this.addStringAt(output, \"/\", ...commonParams);\n    else if (button === \"{numpadmultiply}\")\n      output = this.addStringAt(output, \"*\", ...commonParams);\n    else if (button === \"{numpadsubtract}\")\n      output = this.addStringAt(output, \"-\", ...commonParams);\n    else if (button === \"{numpadadd}\")\n      output = this.addStringAt(output, \"+\", ...commonParams);\n    else if (button === \"{numpaddecimal}\")\n      output = this.addStringAt(output, \".\", ...commonParams);\n    else if (button === \"{\" || button === \"}\")\n      output = this.addStringAt(output, button, ...commonParams);\n    else if (!button.includes(\"{\") && !button.includes(\"}\"))\n      output = this.addStringAt(output, button, ...commonParams);\n\n    return output;\n  }\n\n  /**\n   * Moves the cursor position by a given amount\n   *\n   * @param  {number} length Represents by how many characters the input should be moved\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\n   */\n  updateCaretPos(length, minus) {\n    const newCaretPos = this.updateCaretPosAction(length, minus);\n\n    this.dispatch(instance => {\n      instance.setCaretPosition(newCaretPos);\n    });\n  }\n\n  /**\n   * Action method of updateCaretPos\n   *\n   * @param  {number} length Represents by how many characters the input should be moved\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\n   */\n  updateCaretPosAction(length, minus) {\n    const options = this.getOptions();\n    let caretPosition = this.getCaretPosition();\n\n    if (minus) {\n      if (caretPosition > 0) caretPosition = caretPosition - length;\n    } else {\n      caretPosition = caretPosition + length;\n    }\n\n    if (options.debug) {\n      console.log(\"Caret at:\", caretPosition, `(${this.keyboardDOMClass})`);\n    }\n\n    return caretPosition;\n  }\n\n  /**\n   * Adds a string to the input at a given position\n   *\n   * @param  {string} source The source input\n   * @param  {string} str The string to add\n   * @param  {number} position The (cursor) position where the string should be added\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  addStringAt(\n    source,\n    str,\n    position = source.length,\n    positionEnd = source.length,\n    moveCaret = false\n  ) {\n    let output;\n\n    if (!position && position !== 0) {\n      output = source + str;\n    } else {\n      output = [source.slice(0, position), str, source.slice(positionEnd)].join(\n        \"\"\n      );\n\n      /**\n       * Avoid caret position change when maxLength is set\n       */\n      if (!this.isMaxLengthReached()) {\n        if (moveCaret) this.updateCaretPos(str.length);\n      }\n    }\n\n    return output;\n  }\n\n  /**\n   * Removes an amount of characters at a given position\n   *\n   * @param  {string} source The source input\n   * @param  {number} position The (cursor) position from where the characters should be removed\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  removeAt(\n    source,\n    position = source.length,\n    positionEnd = source.length,\n    moveCaret = false\n  ) {\n    if (position === 0 && positionEnd === 0) {\n      return source;\n    }\n\n    let output;\n\n    if (position === positionEnd) {\n      let prevTwoChars;\n      let emojiMatched;\n      const emojiMatchedReg = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\n\n      /**\n       * Emojis are made out of two characters, so we must take a custom approach to trim them.\n       * For more info: https://mathiasbynens.be/notes/javascript-unicode\n       */\n      if (position && position >= 0) {\n        prevTwoChars = source.substring(position - 2, position);\n        emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n        if (emojiMatched) {\n          output = source.substr(0, position - 2) + source.substr(position);\n          if (moveCaret) this.updateCaretPos(2, true);\n        } else {\n          output = source.substr(0, position - 1) + source.substr(position);\n          if (moveCaret) this.updateCaretPos(1, true);\n        }\n      } else {\n        prevTwoChars = source.slice(-2);\n        emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n        if (emojiMatched) {\n          output = source.slice(0, -2);\n          if (moveCaret) this.updateCaretPos(2, true);\n        } else {\n          output = source.slice(0, -1);\n          if (moveCaret) this.updateCaretPos(1, true);\n        }\n      }\n    } else {\n      output = source.slice(0, position) + source.slice(positionEnd);\n      if (moveCaret) {\n        this.dispatch(instance => {\n          instance.setCaretPosition(position);\n        });\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Determines whether the maxLength has been reached. This function is called when the maxLength option it set.\n   *\n   * @param  {object} inputObj\n   * @param  {string} updatedInput\n   */\n  handleMaxLength(inputObj, updatedInput) {\n    const options = this.getOptions();\n    const maxLength = options.maxLength;\n    const currentInput = inputObj[options.inputName];\n    const condition = updatedInput.length - 1 >= maxLength;\n\n    if (\n      /**\n       * If pressing this button won't add more characters\n       * We exit out of this limiter function\n       */\n      updatedInput.length <= currentInput.length\n    ) {\n      return false;\n    }\n\n    if (Number.isInteger(maxLength)) {\n      if (options.debug) {\n        console.log(\"maxLength (num) reached:\", condition);\n      }\n\n      if (condition) {\n        /**\n         * @type {boolean} Boolean value that shows whether maxLength has been reached\n         */\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n\n    if (typeof maxLength === \"object\") {\n      const condition = updatedInput.length - 1 >= maxLength[options.inputName];\n\n      if (options.debug) {\n        console.log(\"maxLength (obj) reached:\", condition);\n      }\n\n      if (condition) {\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Gets the current value of maxLengthReached\n   */\n  isMaxLengthReached() {\n    return Boolean(this.maxLengthReached);\n  }\n\n  /**\n   * Determines whether a touch device is being used\n   */\n  isTouchDevice() {\n    return \"ontouchstart\" in window || navigator.maxTouchPoints;\n  }\n\n  /**\n   * Determines whether pointer events are supported\n   */\n  pointerEventsSupported() {\n    return window.PointerEvent;\n  }\n\n  /**\n   * Bind all methods in a given class\n   */\n\n  static bindMethods(myClass, instance) {\n    // eslint-disable-next-line no-unused-vars\n    for (const myMethod of Object.getOwnPropertyNames(myClass.prototype)) {\n      const excludeMethod =\n        myMethod === \"constructor\" || myMethod === \"bindMethods\";\n      if (!excludeMethod) {\n        instance[myMethod] = instance[myMethod].bind(instance);\n      }\n    }\n  }\n\n  /**\n   * Transforms an arbitrary string to camelCase\n   *\n   * @param  {string} str The string to transform.\n   */\n  camelCase(str) {\n    if (!str) return false;\n\n    return str\n      .toLowerCase()\n      .trim()\n      .split(/[.\\-_\\s]/g)\n      .reduce((str, word) =>\n        word.length ? str + word[0].toUpperCase() + word.slice(1) : str\n      );\n  }\n\n  static noop = () => {};\n}\n\nexport default Utilities;\n","import Utilities from \"../services/Utilities\";\n\n/**\n * Physical Keyboard Service\n */\nclass PhysicalKeyboard {\n  /**\n   * Creates an instance of the PhysicalKeyboard service\n   */\n  constructor({ dispatch, getOptions }) {\n    /**\n     * @type {object} A simple-keyboard instance\n     */\n    this.dispatch = dispatch;\n    this.getOptions = getOptions;\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(PhysicalKeyboard, this);\n  }\n\n  handleHighlightKeyDown(event) {\n    const options = this.getOptions();\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n    this.dispatch(instance => {\n      const buttonDOM =\n        instance.getButtonElement(buttonPressed) ||\n        instance.getButtonElement(`{${buttonPressed}}`);\n\n      if (buttonDOM) {\n        buttonDOM.style.backgroundColor =\n          options.physicalKeyboardHighlightBgColor || \"#dadce4\";\n        buttonDOM.style.color =\n          options.physicalKeyboardHighlightTextColor || \"black\";\n\n        if (options.physicalKeyboardHighlightPress) {\n          /**\n           * Trigger pointerdown\n           */\n          (\n            buttonDOM.onpointerdown ||\n            buttonDOM.onmousedown ||\n            buttonDOM.ontouchstart ||\n            Utilities.noop\n          )();\n        }\n      }\n    });\n  }\n\n  handleHighlightKeyUp(event) {\n    const options = this.getOptions();\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n    this.dispatch(instance => {\n      const buttonDOM =\n        instance.getButtonElement(buttonPressed) ||\n        instance.getButtonElement(`{${buttonPressed}}`);\n\n      if (buttonDOM && buttonDOM.removeAttribute) {\n        buttonDOM.removeAttribute(\"style\");\n\n        if (options.physicalKeyboardHighlightPress) {\n          /**\n           * Trigger pointerup\n           */\n          (\n            buttonDOM.onpointerup ||\n            buttonDOM.onmouseup ||\n            buttonDOM.ontouchend ||\n            Utilities.noop\n          )();\n        }\n      }\n    });\n  }\n\n  /**\n   * Transforms a KeyboardEvent's \"key.code\" string into a simple-keyboard layout format\n   * @param  {object} event The KeyboardEvent\n   */\n  getSimpleKeyboardLayoutKey(event) {\n    let output;\n\n    if (\n      event.code.includes(\"Numpad\") ||\n      event.code.includes(\"Shift\") ||\n      event.code.includes(\"Space\") ||\n      event.code.includes(\"Backspace\") ||\n      event.code.includes(\"Control\") ||\n      event.code.includes(\"Alt\") ||\n      event.code.includes(\"Meta\")\n    ) {\n      output = event.code;\n    } else {\n      output = event.key;\n    }\n\n    /**\n     * If button is not uppercase, casting to lowercase\n     */\n    if (\n      output !== output.toUpperCase() ||\n      (event.code[0] === \"F\" &&\n        Number.isInteger(Number(event.code[1])) &&\n        event.code.length <= 3)\n    ) {\n      output = output.toLowerCase();\n    }\n\n    return output;\n  }\n}\n\nexport default PhysicalKeyboard;\n","import \"./Keyboard.css\";\n\n// Services\nimport { getDefaultLayout } from \"../services/KeyboardLayout\";\nimport PhysicalKeyboard from \"../services/PhysicalKeyboard\";\nimport Utilities from \"../services/Utilities\";\n\n/**\n * Root class for simple-keyboard\n * This class:\n * - Parses the options\n * - Renders the rows and buttons\n * - Handles button functionality\n */\nclass SimpleKeyboard {\n  /**\n   * Creates an instance of SimpleKeyboard\n   * @param {Array} params If first parameter is a string, it is considered the container class. The second parameter is then considered the options object. If first parameter is an object, it is considered the options object.\n   */\n  constructor(...params) {\n    const { keyboardDOMClass, keyboardDOM, options = {} } = this.handleParams(\n      params\n    );\n\n    /**\n     * Initializing Utilities\n     */\n    this.utilities = new Utilities({\n      getOptions: this.getOptions,\n      getCaretPosition: this.getCaretPosition,\n      getCaretPositionEnd: this.getCaretPositionEnd,\n      dispatch: this.dispatch\n    });\n\n    /**\n     * Caret position\n     */\n    this.caretPosition = null;\n\n    /**\n     * Caret position end\n     */\n    this.caretPositionEnd = null;\n\n    /**\n     * Processing options\n     */\n    this.keyboardDOM = keyboardDOM;\n\n    /**\n     * @type {object}\n     * @property {object} layout Modify the keyboard layout.\n     * @property {string} layoutName Specifies which layout should be used.\n     * @property {object} display Replaces variable buttons (such as {bksp}) with a human-friendly name (e.g.: “backspace”).\n     * @property {boolean} mergeDisplay By default, when you set the display property, you replace the default one. This setting merges them instead.\n     * @property {string} theme A prop to add your own css classes to the keyboard wrapper. You can add multiple classes separated by a space.\n     * @property {array} buttonTheme A prop to add your own css classes to one or several buttons.\n     * @property {array} buttonAttributes A prop to add your own attributes to one or several buttons.\n     * @property {boolean} debug Runs a console.log every time a key is pressed. Displays the buttons pressed and the current input.\n     * @property {boolean} newLineOnEnter Specifies whether clicking the “ENTER” button will input a newline (\\n) or not.\n     * @property {boolean} tabCharOnTab Specifies whether clicking the “TAB” button will input a tab character (\\t) or not.\n     * @property {string} inputName Allows you to use a single simple-keyboard instance for several inputs.\n     * @property {number} maxLength Restrains all of simple-keyboard inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\n     * @property {object} maxLength Restrains simple-keyboard’s individual inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\n     * @property {boolean} syncInstanceInputs When set to true, this option synchronizes the internal input of every simple-keyboard instance.\n     * @property {boolean} physicalKeyboardHighlight Enable highlighting of keys pressed on physical keyboard.\n     * @property {boolean} physicalKeyboardHighlightPress Presses keys highlighted by physicalKeyboardHighlight\n     * @property {string} physicalKeyboardHighlightTextColor Define the text color that the physical keyboard highlighted key should have.\n     * @property {string} physicalKeyboardHighlightBgColor Define the background color that the physical keyboard highlighted key should have.\n     * @property {boolean} preventMouseDownDefault Calling preventDefault for the mousedown events keeps the focus on the input.\n     * @property {boolean} preventMouseUpDefault Calling preventDefault for the mouseup events.\n     * @property {boolean} stopMouseDownPropagation Stops pointer down events on simple-keyboard buttons from bubbling to parent elements.\n     * @property {boolean} stopMouseUpPropagation Stops pointer up events on simple-keyboard buttons from bubbling to parent elements.\n     * @property {function(button: string):string} onKeyPress Executes the callback function on key press. Returns button layout name (i.e.: “{shift}”).\n     * @property {function(input: string):string} onChange Executes the callback function on input change. Returns the current input’s string.\n     * @property {function} onRender Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\n     * @property {function} onInit Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\n     * @property {function(inputs: object):object} onChangeAll Executes the callback function on input change. Returns the input object with all defined inputs.\n     * @property {boolean} useButtonTag Render buttons as a button element instead of a div element.\n     * @property {boolean} disableCaretPositioning A prop to ensure characters are always be added/removed at the end of the string.\n     * @property {object} inputPattern Restrains input(s) change to the defined regular expression pattern.\n     * @property {boolean} useTouchEvents Instructs simple-keyboard to use touch events instead of click events.\n     * @property {boolean} autoUseTouchEvents Enable useTouchEvents automatically when touch device is detected.\n     * @property {boolean} useMouseEvents Opt out of PointerEvents handling, falling back to the prior mouse event logic.\n     * @property {function} destroy Clears keyboard listeners and DOM elements.\n     * @property {boolean} disableButtonHold Disable button hold action.\n     * @property {boolean} rtl Adds unicode right-to-left control characters to input return values.\n     * @property {function} onKeyReleased Executes the callback function on key release.\n     * @property {array} modules Module classes to be loaded by simple-keyboard.\n     */\n    this.options = options;\n    this.options.layoutName = this.options.layoutName || \"default\";\n    this.options.theme = this.options.theme || \"hg-theme-default\";\n    this.options.inputName = this.options.inputName || \"default\";\n    this.options.preventMouseDownDefault =\n      this.options.preventMouseDownDefault || false;\n\n    /**\n     * @type {object} Classes identifying loaded plugins\n     */\n    this.keyboardPluginClasses = \"\";\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(SimpleKeyboard, this);\n\n    /**\n     * simple-keyboard uses a non-persistent internal input to keep track of the entered string (the variable `keyboard.input`).\n     * This removes any dependency to input DOM elements. You can type and directly display the value in a div element, for example.\n     * @example\n     * // To get entered input\n     * const input = keyboard.getInput();\n     *\n     * // To clear entered input.\n     * keyboard.clearInput();\n     *\n     * @type {object}\n     * @property {object} default Default SimpleKeyboard internal input.\n     * @property {object} myInputName Example input that can be set through `options.inputName:\"myInputName\"`.\n     */\n    this.input = {};\n    this.input[this.options.inputName] = \"\";\n\n    /**\n     * @type {string} DOM class of the keyboard wrapper, normally \"simple-keyboard\" by default.\n     */\n    this.keyboardDOMClass = keyboardDOMClass;\n\n    /**\n     * @type {object} Contains the DOM elements of every rendered button, the key being the button's layout name (e.g.: \"{enter}\").\n     */\n    this.buttonElements = {};\n\n    /**\n     * Simple-keyboard Instances\n     * This enables multiple simple-keyboard support with easier management\n     */\n    if (!window[\"SimpleKeyboardInstances\"])\n      window[\"SimpleKeyboardInstances\"] = {};\n\n    this.currentInstanceName = this.utilities.camelCase(this.keyboardDOMClass);\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = this;\n\n    /**\n     * Instance vars\n     */\n    this.allKeyboardInstances = window[\"SimpleKeyboardInstances\"];\n    this.keyboardInstanceNames = Object.keys(window[\"SimpleKeyboardInstances\"]);\n    this.isFirstKeyboardInstance =\n      this.keyboardInstanceNames[0] === this.currentInstanceName;\n\n    /**\n     * Physical Keyboard support\n     */\n    this.physicalKeyboard = new PhysicalKeyboard({\n      dispatch: this.dispatch,\n      getOptions: this.getOptions\n    });\n\n    /**\n     * Rendering keyboard\n     */\n    if (this.keyboardDOM) this.render();\n    else {\n      console.warn(`\".${keyboardDOMClass}\" was not found in the DOM.`);\n      throw new Error(\"KEYBOARD_DOM_ERROR\");\n    }\n\n    /**\n     * Modules\n     */\n    this.modules = {};\n    this.loadModules();\n  }\n\n  /**\n   * parseParams\n   */\n  handleParams = params => {\n    let keyboardDOMClass;\n    let keyboardDOM;\n    let options;\n\n    /**\n     * If first parameter is a string:\n     * Consider it as an element's class\n     */\n    if (typeof params[0] === \"string\") {\n      keyboardDOMClass = params[0].split(\".\").join(\"\");\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\n      options = params[1];\n\n      /**\n       * If first parameter is an HTMLDivElement\n       * Consider it as the keyboard DOM element\n       */\n    } else if (params[0] instanceof HTMLDivElement) {\n      /**\n       * This element must have a class, otherwise throw\n       */\n      if (!params[0].className) {\n        console.warn(\"Any DOM element passed as parameter must have a class.\");\n        throw new Error(\"KEYBOARD_DOM_CLASS_ERROR\");\n      }\n\n      keyboardDOMClass = params[0].className.split(\" \")[0];\n      keyboardDOM = params[0];\n      options = params[1];\n\n      /**\n       * Otherwise, search for .simple-keyboard DOM element\n       */\n    } else {\n      keyboardDOMClass = \"simple-keyboard\";\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\n      options = params[0];\n    }\n\n    return {\n      keyboardDOMClass,\n      keyboardDOM,\n      options\n    };\n  };\n\n  /**\n   * Getters\n   */\n  getOptions = () => this.options;\n  getCaretPosition = () => this.caretPosition;\n  getCaretPositionEnd = () => this.caretPositionEnd;\n\n  /**\n   * Setters\n   */\n  setCaretPosition(position, endPosition) {\n    this.caretPosition = position;\n    this.caretPositionEnd = endPosition || position;\n  }\n\n  /**\n   * Handles clicks made to keyboard buttons\n   * @param  {string} button The button's layout name.\n   */\n  handleButtonClicked(button) {\n    const debug = this.options.debug;\n\n    /**\n     * Ignoring placeholder buttons\n     */\n    if (button === \"{//}\") return false;\n\n    /**\n     * Calling onKeyPress\n     */\n    if (typeof this.options.onKeyPress === \"function\")\n      this.options.onKeyPress(button);\n\n    if (!this.input[this.options.inputName])\n      this.input[this.options.inputName] = \"\";\n\n    const updatedInput = this.utilities.getUpdatedInput(\n      button,\n      this.input[this.options.inputName],\n      this.caretPosition,\n      this.caretPositionEnd\n    );\n\n    if (\n      // If input will change as a result of this button press\n      this.input[this.options.inputName] !== updatedInput &&\n      // This pertains to the \"inputPattern\" option:\n      // If inputPattern isn't set\n      (!this.options.inputPattern ||\n        // Or, if it is set and if the pattern is valid - we proceed.\n        (this.options.inputPattern && this.inputPatternIsValid(updatedInput)))\n    ) {\n      /**\n       * If maxLength and handleMaxLength yield true, halting\n       */\n      if (\n        this.options.maxLength &&\n        this.utilities.handleMaxLength(this.input, updatedInput)\n      ) {\n        return false;\n      }\n\n      this.input[this.options.inputName] = this.utilities.getUpdatedInput(\n        button,\n        this.input[this.options.inputName],\n        this.caretPosition,\n        this.caretPositionEnd,\n        true\n      );\n\n      if (debug) console.log(\"Input changed:\", this.getAllInputs());\n\n      if (this.options.debug) {\n        console.log(\n          \"Caret at: \",\n          this.getCaretPosition(),\n          this.getCaretPositionEnd(),\n          `(${this.keyboardDOMClass})`\n        );\n      }\n\n      /**\n       * Enforce syncInstanceInputs, if set\n       */\n      if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n\n      /**\n       * Calling onChange\n       */\n      if (typeof this.options.onChange === \"function\")\n        this.options.onChange(this.getInput(this.options.inputName, true));\n\n      /**\n       * Calling onChangeAll\n       */\n      if (typeof this.options.onChangeAll === \"function\")\n        this.options.onChangeAll(this.getAllInputs());\n    }\n\n    if (debug) {\n      console.log(\"Key pressed:\", button);\n    }\n  }\n\n  /**\n   * Handles button mousedown\n   */\n  /* istanbul ignore next */\n  handleButtonMouseDown(button, e) {\n    /**\n     * Handle event options\n     */\n    if (this.options.preventMouseDownDefault) e.preventDefault();\n    if (this.options.stopMouseDownPropagation) e.stopPropagation();\n\n    /**\n     * Add active class\n     */\n    if (e) e.target.classList.add(this.activeButtonClass);\n\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n    if (this.holdTimeout) clearTimeout(this.holdTimeout);\n\n    /**\n     * @type {boolean} Whether the mouse is being held onKeyPress\n     */\n    this.isMouseHold = true;\n\n    /**\n     * @type {object} Time to wait until a key hold is detected\n     */\n    if (!this.options.disableButtonHold) {\n      this.holdTimeout = setTimeout(() => {\n        if (\n          (this.isMouseHold &&\n            // TODO: This needs to be configurable through options\n            ((!button.includes(\"{\") && !button.includes(\"}\")) ||\n              button === \"{delete}\" ||\n              button === \"{backspace}\" ||\n              button === \"{bksp}\" ||\n              button === \"{space}\" ||\n              button === \"{tab}\")) ||\n          button === \"{arrowright}\" ||\n          button === \"{arrowleft}\" ||\n          button === \"{arrowup}\" ||\n          button === \"{arrowdown}\"\n        ) {\n          if (this.options.debug) console.log(\"Button held:\", button);\n\n          this.handleButtonHold(button, e);\n        }\n        clearTimeout(this.holdTimeout);\n      }, 500);\n    }\n  }\n\n  /**\n   * Handles button mouseup\n   */\n  handleButtonMouseUp(button = null, e = null) {\n    if (e) {\n      /**\n       * Handle event options\n       */\n      if (this.options.preventMouseUpDefault) e.preventDefault();\n      if (this.options.stopMouseUpPropagation) e.stopPropagation();\n    }\n\n    /**\n     * Remove active class\n     */\n    this.recurseButtons(buttonElement => {\n      buttonElement.classList.remove(this.activeButtonClass);\n    });\n\n    this.isMouseHold = false;\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n\n    /**\n     * Calling onKeyReleased\n     */\n    if (button && typeof this.options.onKeyReleased === \"function\")\n      this.options.onKeyReleased(button);\n  }\n\n  /**\n   * Handles container mousedown\n   */\n  handleKeyboardContainerMouseDown(e) {\n    /**\n     * Handle event options\n     */\n    if (this.options.preventMouseDownDefault) e.preventDefault();\n  }\n\n  /**\n   * Handles button hold\n   */\n  /* istanbul ignore next */\n  handleButtonHold(button) {\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n\n    /**\n     * @type {object} Timeout dictating the speed of key hold iterations\n     */\n    this.holdInteractionTimeout = setTimeout(() => {\n      if (this.isMouseHold) {\n        this.handleButtonClicked(button);\n        this.handleButtonHold(button);\n      } else {\n        clearTimeout(this.holdInteractionTimeout);\n      }\n    }, 100);\n  }\n\n  /**\n   * Send a command to all simple-keyboard instances (if you have several instances).\n   */\n  syncInstanceInputs() {\n    this.dispatch(instance => {\n      instance.replaceInput(this.input);\n      instance.setCaretPosition(this.caretPosition, this.caretPositionEnd);\n    });\n  }\n\n  /**\n   * Clear the keyboard’s input.\n   * @param {string} [inputName] optional - the internal input to select\n   */\n  clearInput(inputName) {\n    inputName = inputName || this.options.inputName;\n    this.input[inputName] = \"\";\n\n    /**\n     * Reset caretPosition\n     */\n    this.setCaretPosition(0);\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n  }\n\n  /**\n   * Get the keyboard’s input (You can also get it from the onChange prop).\n   * @param  {string} [inputName] optional - the internal input to select\n   */\n  getInput(inputName, skipSync = false) {\n    inputName = inputName || this.options.inputName;\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs && !skipSync) this.syncInstanceInputs();\n\n    if (this.options.rtl) {\n      // Remove existing control chars\n      const inputWithoutRTLControl = this.input[inputName]\n        .replace(\"\\u202B\", \"\")\n        .replace(\"\\u202C\", \"\");\n\n      return \"\\u202B\" + inputWithoutRTLControl + \"\\u202C\";\n    } else {\n      return this.input[inputName];\n    }\n  }\n\n  /**\n   * Get all simple-keyboard inputs\n   */\n  getAllInputs() {\n    const output = {};\n    const inputNames = Object.keys(this.input);\n\n    inputNames.forEach(inputName => {\n      output[inputName] = this.getInput(inputName, true);\n    });\n\n    return output;\n  }\n\n  /**\n   * Set the keyboard’s input.\n   * @param  {string} input the input value\n   * @param  {string} inputName optional - the internal input to select\n   */\n  setInput(input, inputName) {\n    inputName = inputName || this.options.inputName;\n    this.input[inputName] = input;\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n  }\n\n  /**\n   * Replace the input object (`keyboard.input`)\n   * @param  {object} inputObj The input object\n   */\n  replaceInput(inputObj) {\n    this.input = inputObj;\n  }\n\n  /**\n   * Set new option or modify existing ones after initialization.\n   * @param  {object} options The options to set\n   */\n  setOptions(options = {}) {\n    const changedOptions = this.changedOptions(options);\n    this.options = Object.assign(this.options, options);\n\n    if (changedOptions.length) {\n      if (this.options.debug) {\n        console.log(\"changedOptions\", changedOptions);\n      }\n\n      /**\n       * Some option changes require adjustments before re-render\n       */\n      this.onSetOptions(options);\n\n      /**\n       * Rendering\n       */\n      this.render();\n    }\n  }\n\n  /**\n   * Detecting changes to non-function options\n   * This allows us to ascertain whether a button re-render is needed\n   */\n  changedOptions(newOptions) {\n    return Object.keys(newOptions).filter(\n      optionName =>\n        JSON.stringify(newOptions[optionName]) !==\n        JSON.stringify(this.options[optionName])\n    );\n  }\n\n  /**\n   * Executing actions depending on changed options\n   * @param  {object} options The options to set\n   */\n  onSetOptions(options) {\n    if (options.inputName) {\n      /**\n       * inputName changed. This requires a caretPosition reset\n       */\n      if (this.options.debug) {\n        console.log(\"inputName changed. caretPosition reset.\");\n      }\n      this.setCaretPosition(null);\n    }\n  }\n\n  /**\n   * Remove all keyboard rows and reset keyboard values.\n   * Used internally between re-renders.\n   */\n  clear() {\n    this.keyboardDOM.innerHTML = \"\";\n    this.keyboardDOM.className = this.keyboardDOMClass;\n    this.buttonElements = {};\n  }\n\n  /**\n   * Send a command to all simple-keyboard instances at once (if you have multiple instances).\n   * @param  {function(instance: object, key: string)} callback Function to run on every instance\n   */\n  dispatch(callback) {\n    if (!window[\"SimpleKeyboardInstances\"]) {\n      console.warn(\n        `SimpleKeyboardInstances is not defined. Dispatch cannot be called.`\n      );\n      throw new Error(\"INSTANCES_VAR_ERROR\");\n    }\n\n    return Object.keys(window[\"SimpleKeyboardInstances\"]).forEach(key => {\n      callback(window[\"SimpleKeyboardInstances\"][key], key);\n    });\n  }\n\n  /**\n   * Adds/Modifies an entry to the `buttonTheme`. Basically a way to add a class to a button.\n   * @param  {string} buttons List of buttons to select (separated by a space).\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\n   */\n  addButtonTheme(buttons, className) {\n    if (!className || !buttons) return false;\n\n    buttons.split(\" \").forEach(button => {\n      className.split(\" \").forEach(classNameItem => {\n        if (!this.options.buttonTheme) this.options.buttonTheme = [];\n\n        let classNameFound = false;\n\n        /**\n         * If class is already defined, we add button to class definition\n         */\n        this.options.buttonTheme.map(buttonTheme => {\n          if (buttonTheme.class.split(\" \").includes(classNameItem)) {\n            classNameFound = true;\n\n            const buttonThemeArray = buttonTheme.buttons.split(\" \");\n            if (!buttonThemeArray.includes(button)) {\n              classNameFound = true;\n              buttonThemeArray.push(button);\n              buttonTheme.buttons = buttonThemeArray.join(\" \");\n            }\n          }\n          return buttonTheme;\n        });\n\n        /**\n         * If class is not defined, we create a new entry\n         */\n        if (!classNameFound) {\n          this.options.buttonTheme.push({\n            class: classNameItem,\n            buttons: buttons\n          });\n        }\n      });\n    });\n\n    this.render();\n  }\n\n  /**\n   * Removes/Amends an entry to the `buttonTheme`. Basically a way to remove a class previously added to a button through buttonTheme or addButtonTheme.\n   * @param  {string} buttons List of buttons to select (separated by a space).\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\n   */\n  removeButtonTheme(buttons, className) {\n    /**\n     * When called with empty parameters, remove all button themes\n     */\n    if (!buttons && !className) {\n      this.options.buttonTheme = [];\n      this.render();\n      return false;\n    }\n\n    /**\n     * If buttons are passed and buttonTheme has items\n     */\n    if (\n      buttons &&\n      Array.isArray(this.options.buttonTheme) &&\n      this.options.buttonTheme.length\n    ) {\n      const buttonArray = buttons.split(\" \");\n      buttonArray.forEach(button => {\n        this.options.buttonTheme.map((buttonTheme, index) => {\n          /**\n           * If className is set, we affect the buttons only for that class\n           * Otherwise, we afect all classes\n           */\n          if (\n            (className && className.includes(buttonTheme.class)) ||\n            !className\n          ) {\n            const filteredButtonArray = buttonTheme.buttons\n              .split(\" \")\n              .filter(item => item !== button);\n\n            /**\n             * If buttons left, return them, otherwise, remove button Theme\n             */\n            if (filteredButtonArray.length) {\n              buttonTheme.buttons = filteredButtonArray.join(\" \");\n            } else {\n              this.options.buttonTheme.splice(index, 1);\n              buttonTheme = null;\n            }\n          }\n\n          return buttonTheme;\n        });\n      });\n\n      this.render();\n    }\n  }\n\n  /**\n   * Get the DOM Element of a button. If there are several buttons with the same name, an array of the DOM Elements is returned.\n   * @param  {string} button The button layout name to select\n   */\n  getButtonElement(button) {\n    let output;\n\n    const buttonArr = this.buttonElements[button];\n    if (buttonArr) {\n      if (buttonArr.length > 1) {\n        output = buttonArr;\n      } else {\n        output = buttonArr[0];\n      }\n    }\n\n    return output;\n  }\n\n  /**\n   * This handles the \"inputPattern\" option\n   * by checking if the provided inputPattern passes\n   */\n  inputPatternIsValid(inputVal) {\n    const inputPatternRaw = this.options.inputPattern;\n    let inputPattern;\n\n    /**\n     * Check if input pattern is global or targeted to individual inputs\n     */\n    if (inputPatternRaw instanceof RegExp) {\n      inputPattern = inputPatternRaw;\n    } else {\n      inputPattern = inputPatternRaw[this.options.inputName];\n    }\n\n    if (inputPattern && inputVal) {\n      const didInputMatch = inputPattern.test(inputVal);\n\n      if (this.options.debug) {\n        console.log(\n          `inputPattern (\"${inputPattern}\"): ${\n            didInputMatch ? \"passed\" : \"did not pass!\"\n          }`\n        );\n      }\n\n      return didInputMatch;\n    } else {\n      /**\n       * inputPattern doesn't seem to be set for the current input, or input is empty. Pass.\n       */\n      return true;\n    }\n  }\n\n  /**\n   * Handles simple-keyboard event listeners\n   */\n  setEventListeners() {\n    /**\n     * Only first instance should set the event listeners\n     */\n    if (this.isFirstKeyboardInstance || !this.allKeyboardInstances) {\n      if (this.options.debug) {\n        console.log(`Caret handling started (${this.keyboardDOMClass})`);\n      }\n\n      /**\n       * Event Listeners\n       */\n      document.addEventListener(\"keyup\", this.handleKeyUp);\n      document.addEventListener(\"keydown\", this.handleKeyDown);\n      document.addEventListener(\"mouseup\", this.handleMouseUp);\n      document.addEventListener(\"touchend\", this.handleTouchEnd);\n    }\n  }\n\n  /**\n   * Event Handler: KeyUp\n   */\n  handleKeyUp(event) {\n    this.caretEventHandler(event);\n\n    if (this.options.physicalKeyboardHighlight) {\n      this.physicalKeyboard.handleHighlightKeyUp(event);\n    }\n  }\n\n  /**\n   * Event Handler: KeyDown\n   */\n  handleKeyDown(event) {\n    if (this.options.physicalKeyboardHighlight) {\n      this.physicalKeyboard.handleHighlightKeyDown(event);\n    }\n  }\n\n  /**\n   * Event Handler: MouseUp\n   */\n  handleMouseUp(event) {\n    this.caretEventHandler(event);\n  }\n\n  /**\n   * Event Handler: TouchEnd\n   */\n  /* istanbul ignore next */\n  handleTouchEnd(event) {\n    this.caretEventHandler(event);\n  }\n\n  /**\n   * Called by {@link setEventListeners} when an event that warrants a cursor position update is triggered\n   */\n  caretEventHandler(event) {\n    let targetTagName;\n    if (event.target.tagName) {\n      targetTagName = event.target.tagName.toLowerCase();\n    }\n\n    this.dispatch(instance => {\n      const isKeyboard =\n        event.target === instance.keyboardDOM ||\n        (event.target && instance.keyboardDOM.contains(event.target));\n\n      if (instance.isMouseHold) {\n        instance.isMouseHold = false;\n      }\n\n      if (\n        (targetTagName === \"textarea\" || targetTagName === \"input\") &&\n        !instance.options.disableCaretPositioning\n      ) {\n        /**\n         * Tracks current cursor position\n         * As keys are pressed, text will be added/removed at that position within the input.\n         */\n        instance.setCaretPosition(\n          event.target.selectionStart,\n          event.target.selectionEnd\n        );\n\n        if (instance.options.debug) {\n          console.log(\n            \"Caret at: \",\n            instance.getCaretPosition(),\n            instance.getCaretPositionEnd(),\n            event && event.target.tagName.toLowerCase(),\n            `(${instance.keyboardDOMClass})`\n          );\n        }\n      } else if (instance.options.disableCaretPositioning || !isKeyboard) {\n        /**\n         * If we toggled off disableCaretPositioning, we must ensure caretPosition doesn't persist once reactivated.\n         */\n        instance.setCaretPosition(null);\n      }\n    });\n  }\n\n  /**\n   * Execute an operation on each button\n   */\n  recurseButtons(fn) {\n    if (!fn) return false;\n\n    Object.keys(this.buttonElements).forEach(buttonName =>\n      this.buttonElements[buttonName].forEach(fn)\n    );\n  }\n\n  /**\n   * Destroy keyboard listeners and DOM elements\n   */\n  destroy() {\n    if (this.options.debug)\n      console.log(\n        `Destroying simple-keyboard instance: ${this.currentInstanceName}`\n      );\n\n    /**\n     * Remove document listeners\n     */\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    document.removeEventListener(\"touchend\", this.handleTouchEnd);\n    document.onpointerup = null;\n    document.ontouchend = null;\n    document.ontouchcancel = null;\n    document.onmouseup = null;\n\n    /**\n     * Remove buttons\n     */\n    let deleteButton = buttonElement => {\n      buttonElement.onpointerdown = null;\n      buttonElement.onpointerup = null;\n      buttonElement.onpointercancel = null;\n      buttonElement.ontouchstart = null;\n      buttonElement.ontouchend = null;\n      buttonElement.ontouchcancel = null;\n      buttonElement.onclick = null;\n      buttonElement.onmousedown = null;\n      buttonElement.onmouseup = null;\n\n      buttonElement.remove();\n      buttonElement = null;\n    };\n\n    this.recurseButtons(deleteButton);\n\n    this.recurseButtons = null;\n    deleteButton = null;\n\n    /**\n     * Remove wrapper events\n     */\n    this.keyboardDOM.onpointerdown = null;\n    this.keyboardDOM.ontouchstart = null;\n    this.keyboardDOM.onmousedown = null;\n\n    /**\n     * Clearing keyboard wrapper\n     */\n    this.clear();\n\n    /**\n     * Remove instance\n     */\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = null;\n    delete window[\"SimpleKeyboardInstances\"][this.currentInstanceName];\n\n    /**\n     * Reset initialized flag\n     */\n    this.initialized = false;\n  }\n\n  /**\n   * Process buttonTheme option\n   */\n  getButtonThemeClasses(button) {\n    const buttonTheme = this.options.buttonTheme;\n    let buttonClasses = [];\n\n    if (Array.isArray(buttonTheme)) {\n      buttonTheme.forEach(themeObj => {\n        if (\n          themeObj.class &&\n          typeof themeObj.class === \"string\" &&\n          themeObj.buttons &&\n          typeof themeObj.buttons === \"string\"\n        ) {\n          const themeObjClasses = themeObj.class.split(\" \");\n          const themeObjButtons = themeObj.buttons.split(\" \");\n\n          if (themeObjButtons.includes(button)) {\n            buttonClasses = [...buttonClasses, ...themeObjClasses];\n          }\n        } else {\n          console.warn(\n            `Incorrect \"buttonTheme\". Please check the documentation.`,\n            themeObj\n          );\n        }\n      });\n    }\n\n    return buttonClasses;\n  }\n\n  /**\n   * Process buttonAttributes option\n   */\n  setDOMButtonAttributes(button, callback) {\n    const buttonAttributes = this.options.buttonAttributes;\n\n    if (Array.isArray(buttonAttributes)) {\n      buttonAttributes.forEach(attrObj => {\n        if (\n          attrObj.attribute &&\n          typeof attrObj.attribute === \"string\" &&\n          attrObj.value &&\n          typeof attrObj.value === \"string\" &&\n          attrObj.buttons &&\n          typeof attrObj.buttons === \"string\"\n        ) {\n          const attrObjButtons = attrObj.buttons.split(\" \");\n\n          if (attrObjButtons.includes(button)) {\n            callback(attrObj.attribute, attrObj.value);\n          }\n        } else {\n          console.warn(\n            `Incorrect \"buttonAttributes\". Please check the documentation.`,\n            attrObj\n          );\n        }\n      });\n    }\n  }\n\n  onTouchDeviceDetected() {\n    /**\n     * Processing autoTouchEvents\n     */\n    this.processAutoTouchEvents();\n\n    /**\n     * Disabling contextual window on touch devices\n     */\n    this.disableContextualWindow();\n  }\n\n  /**\n   * Disabling contextual window for hg-button\n   */\n  /* istanbul ignore next */\n  disableContextualWindow() {\n    window.oncontextmenu = event => {\n      if (event.target.classList.contains(\"hg-button\")) {\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      }\n    };\n  }\n\n  /**\n   * Process autoTouchEvents option\n   */\n  processAutoTouchEvents() {\n    if (this.options.autoUseTouchEvents) {\n      this.options.useTouchEvents = true;\n\n      if (this.options.debug) {\n        console.log(\n          `autoUseTouchEvents: Touch device detected, useTouchEvents enabled.`\n        );\n      }\n    }\n  }\n\n  /**\n   * Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\n   */\n  onInit() {\n    if (this.options.debug) {\n      console.log(`${this.keyboardDOMClass} Initialized`);\n    }\n\n    /**\n     * setEventListeners\n     */\n    this.setEventListeners();\n\n    if (typeof this.options.onInit === \"function\") this.options.onInit();\n  }\n\n  /**\n   * Executes the callback function before a simple-keyboard render.\n   */\n  beforeFirstRender() {\n    /**\n     * Performing actions when touch device detected\n     */\n    if (this.utilities.isTouchDevice()) {\n      this.onTouchDeviceDetected();\n    }\n\n    if (typeof this.options.beforeFirstRender === \"function\")\n      this.options.beforeFirstRender();\n\n    /**\n     * Notify about PointerEvents usage\n     */\n    if (\n      this.isFirstKeyboardInstance &&\n      this.utilities.pointerEventsSupported() &&\n      !this.options.useTouchEvents &&\n      !this.options.useMouseEvents\n    ) {\n      if (this.options.debug) {\n        console.log(\"Using PointerEvents as it is supported by this browser\");\n      }\n    }\n\n    /**\n     * Notify about touch events usage\n     */\n    if (this.options.useTouchEvents) {\n      if (this.options.debug) {\n        console.log(\n          \"useTouchEvents has been enabled. Only touch events will be used.\"\n        );\n      }\n    }\n  }\n\n  /**\n   * Executes the callback function before a simple-keyboard render.\n   */\n  beforeRender() {\n    if (typeof this.options.beforeRender === \"function\")\n      this.options.beforeRender();\n  }\n\n  /**\n   * Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\n   */\n  onRender() {\n    if (typeof this.options.onRender === \"function\") this.options.onRender();\n  }\n\n  /**\n   * Executes the callback function once all modules have been loaded\n   */\n  onModulesLoaded() {\n    if (typeof this.options.onModulesLoaded === \"function\")\n      this.options.onModulesLoaded(this);\n  }\n\n  /**\n   * Register module\n   */\n  registerModule = (name, initCallback) => {\n    if (!this.modules[name]) this.modules[name] = {};\n\n    initCallback(this.modules[name]);\n  };\n\n  /**\n   * Load modules\n   */\n  loadModules() {\n    if (Array.isArray(this.options.modules)) {\n      this.options.modules.forEach(KeyboardModule => {\n        const keyboardModule = new KeyboardModule();\n        keyboardModule.init(this);\n      });\n\n      this.keyboardPluginClasses = \"modules-loaded\";\n\n      this.render();\n      this.onModulesLoaded();\n    }\n  }\n\n  /**\n   * Get module prop\n   */\n  getModuleProp(name, prop) {\n    if (!this.modules[name]) return false;\n\n    return this.modules[name][prop];\n  }\n\n  /**\n   * getModulesList\n   */\n  getModulesList() {\n    return Object.keys(this.modules);\n  }\n\n  /**\n   * Parse Row DOM containers\n   */\n  parseRowDOMContainers(\n    rowDOM,\n    rowIndex,\n    containerStartIndexes,\n    containerEndIndexes\n  ) {\n    const rowDOMArray = Array.from(rowDOM.children);\n    let removedElements = 0;\n\n    if (rowDOMArray.length) {\n      containerStartIndexes.forEach((startIndex, arrIndex) => {\n        const endIndex = containerEndIndexes[arrIndex];\n\n        /**\n         * If there exists a respective end index\n         * if end index comes after start index\n         */\n        if (!endIndex || !(endIndex > startIndex)) {\n          return false;\n        }\n\n        /**\n         * Updated startIndex, endIndex\n         * This is since the removal of buttons to place a single button container\n         * results in a modified array size\n         */\n        const updated_startIndex = startIndex - removedElements;\n        const updated_endIndex = endIndex - removedElements;\n\n        /**\n         * Create button container\n         */\n        const containerDOM = document.createElement(\"div\");\n        containerDOM.className += \"hg-button-container\";\n        const containerUID = `${this.options.layoutName}-r${rowIndex}c${arrIndex}`;\n        containerDOM.setAttribute(\"data-skUID\", containerUID);\n\n        /**\n         * Taking elements due to be inserted into container\n         */\n        const containedElements = rowDOMArray.splice(\n          updated_startIndex,\n          updated_endIndex - updated_startIndex + 1\n        );\n        removedElements = updated_endIndex - updated_startIndex;\n\n        /**\n         * Inserting elements to container\n         */\n        containedElements.forEach(element => containerDOM.appendChild(element));\n\n        /**\n         * Adding container at correct position within rowDOMArray\n         */\n        rowDOMArray.splice(updated_startIndex, 0, containerDOM);\n\n        /**\n         * Clearing old rowDOM children structure\n         */\n        rowDOM.innerHTML = \"\";\n\n        /**\n         * Appending rowDOM new children list\n         */\n        rowDOMArray.forEach(element => rowDOM.appendChild(element));\n\n        if (this.options.debug) {\n          console.log(\n            \"rowDOMContainer\",\n            containedElements,\n            updated_startIndex,\n            updated_endIndex,\n            removedElements + 1\n          );\n        }\n      });\n    }\n\n    return rowDOM;\n  }\n\n  /**\n   * getKeyboardClassString\n   */\n  getKeyboardClassString = (...baseDOMClasses) => {\n    const keyboardClasses = [this.keyboardDOMClass, ...baseDOMClasses].filter(\n      DOMClass => !!DOMClass\n    );\n\n    return keyboardClasses.join(\" \");\n  };\n\n  /**\n   * Renders rows and buttons as per options\n   */\n  render() {\n    /**\n     * Clear keyboard\n     */\n    this.clear();\n\n    /**\n     * Calling beforeFirstRender\n     */\n    if (!this.initialized) {\n      this.beforeFirstRender();\n    }\n\n    /**\n     * Calling beforeRender\n     */\n    this.beforeRender();\n\n    const layoutClass = `hg-layout-${this.options.layoutName}`;\n    const layout = this.options.layout || getDefaultLayout();\n    const useTouchEvents = this.options.useTouchEvents || false;\n    const useTouchEventsClass = useTouchEvents ? \"hg-touch-events\" : \"\";\n    const useMouseEvents = this.options.useMouseEvents || false;\n    const disableRowButtonContainers = this.options.disableRowButtonContainers;\n\n    /**\n     * Adding themeClass, layoutClass to keyboardDOM\n     */\n    this.keyboardDOM.className = this.getKeyboardClassString(\n      this.options.theme,\n      layoutClass,\n      this.keyboardPluginClasses,\n      useTouchEventsClass\n    );\n\n    /**\n     * Iterating through each row\n     */\n    layout[this.options.layoutName].forEach((row, rIndex) => {\n      const rowArray = row.split(\" \");\n\n      /**\n       * Creating empty row\n       */\n      let rowDOM = document.createElement(\"div\");\n      rowDOM.className += \"hg-row\";\n\n      /**\n       * Tracking container indicators in rows\n       */\n      const containerStartIndexes = [];\n      const containerEndIndexes = [];\n\n      /**\n       * Iterating through each button in row\n       */\n      rowArray.forEach((button, bIndex) => {\n        /**\n         * Check if button has a container indicator\n         */\n        const buttonHasContainerStart =\n          !disableRowButtonContainers &&\n          typeof button === \"string\" &&\n          button.length > 1 &&\n          button.indexOf(\"[\") === 0;\n\n        const buttonHasContainerEnd =\n          !disableRowButtonContainers &&\n          typeof button === \"string\" &&\n          button.length > 1 &&\n          button.indexOf(\"]\") === button.length - 1;\n\n        /**\n         * Save container start index, if applicable\n         */\n        if (buttonHasContainerStart) {\n          containerStartIndexes.push(bIndex);\n\n          /**\n           * Removing indicator\n           */\n          button = button.replace(/\\[/g, \"\");\n        }\n\n        if (buttonHasContainerEnd) {\n          containerEndIndexes.push(bIndex);\n\n          /**\n           * Removing indicator\n           */\n          button = button.replace(/\\]/g, \"\");\n        }\n\n        /**\n         * Processing button options\n         */\n        const fctBtnClass = this.utilities.getButtonClass(button);\n        const buttonDisplayName = this.utilities.getButtonDisplayName(\n          button,\n          this.options.display,\n          this.options.mergeDisplay\n        );\n\n        /**\n         * Creating button\n         */\n        const buttonType = this.options.useButtonTag ? \"button\" : \"div\";\n        const buttonDOM = document.createElement(buttonType);\n        buttonDOM.className += `hg-button ${fctBtnClass}`;\n\n        /**\n         * Adding buttonTheme\n         */\n        buttonDOM.classList.add(...this.getButtonThemeClasses(button));\n\n        /**\n         * Adding buttonAttributes\n         */\n        this.setDOMButtonAttributes(button, (attribute, value) => {\n          buttonDOM.setAttribute(attribute, value);\n        });\n\n        this.activeButtonClass = \"hg-activeButton\";\n\n        /**\n         * Handle button click event\n         */\n        /* istanbul ignore next */\n        if (\n          this.utilities.pointerEventsSupported() &&\n          !useTouchEvents &&\n          !useMouseEvents\n        ) {\n          /**\n           * Handle PointerEvents\n           */\n          buttonDOM.onpointerdown = e => {\n            this.handleButtonClicked(button);\n            this.handleButtonMouseDown(button, e);\n          };\n          buttonDOM.onpointerup = e => {\n            this.handleButtonMouseUp(button, e);\n          };\n          buttonDOM.onpointercancel = e => {\n            this.handleButtonMouseUp(button, e);\n          };\n        } else {\n          /**\n           * Fallback for browsers not supporting PointerEvents\n           */\n          if (useTouchEvents) {\n            /**\n             * Handle touch events\n             */\n            buttonDOM.ontouchstart = e => {\n              this.handleButtonClicked(button);\n              this.handleButtonMouseDown(button, e);\n            };\n            buttonDOM.ontouchend = e => {\n              this.handleButtonMouseUp(button, e);\n            };\n            buttonDOM.ontouchcancel = e => {\n              this.handleButtonMouseUp(button, e);\n            };\n          } else {\n            /**\n             * Handle mouse events\n             */\n            buttonDOM.onclick = () => {\n              this.isMouseHold = false;\n              this.handleButtonClicked(button);\n            };\n            buttonDOM.onmousedown = e => {\n              this.handleButtonMouseDown(button, e);\n            };\n            buttonDOM.onmouseup = e => {\n              this.handleButtonMouseUp(button, e);\n            };\n          }\n        }\n\n        /**\n         * Adding identifier\n         */\n        buttonDOM.setAttribute(\"data-skBtn\", button);\n\n        /**\n         * Adding unique id\n         * Since there's no limit on spawning same buttons, the unique id ensures you can style every button\n         */\n        const buttonUID = `${this.options.layoutName}-r${rIndex}b${bIndex}`;\n        buttonDOM.setAttribute(\"data-skBtnUID\", buttonUID);\n\n        /**\n         * Adding button label to button\n         */\n        const buttonSpanDOM = document.createElement(\"span\");\n        buttonSpanDOM.innerHTML = buttonDisplayName;\n        buttonDOM.appendChild(buttonSpanDOM);\n\n        /**\n         * Adding to buttonElements\n         */\n        if (!this.buttonElements[button]) this.buttonElements[button] = [];\n\n        this.buttonElements[button].push(buttonDOM);\n\n        /**\n         * Appending button to row\n         */\n        rowDOM.appendChild(buttonDOM);\n      });\n\n      /**\n       * Parse containers in row\n       */\n      rowDOM = this.parseRowDOMContainers(\n        rowDOM,\n        rIndex,\n        containerStartIndexes,\n        containerEndIndexes\n      );\n\n      /**\n       * Appending row to keyboard\n       */\n      this.keyboardDOM.appendChild(rowDOM);\n    });\n\n    /**\n     * Calling onRender\n     */\n    this.onRender();\n\n    if (!this.initialized) {\n      /**\n       * Ensures that onInit and beforeFirstRender are only called once per instantiation\n       */\n      this.initialized = true;\n\n      /**\n       * Handling parent events\n       */\n      /* istanbul ignore next */\n      if (\n        this.utilities.pointerEventsSupported() &&\n        !useTouchEvents &&\n        !useMouseEvents\n      ) {\n        document.onpointerup = () => this.handleButtonMouseUp();\n        this.keyboardDOM.onpointerdown = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      } else if (useTouchEvents) {\n        /**\n         * Handling ontouchend, ontouchcancel\n         */\n        document.ontouchend = () => this.handleButtonMouseUp();\n        document.ontouchcancel = () => this.handleButtonMouseUp();\n\n        this.keyboardDOM.ontouchstart = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      } else if (!useTouchEvents) {\n        /**\n         * Handling mouseup\n         */\n        document.onmouseup = () => this.handleButtonMouseUp();\n        this.keyboardDOM.onmousedown = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      }\n\n      /**\n       * Calling onInit\n       */\n      this.onInit();\n    }\n  }\n}\n\nexport default SimpleKeyboard;\n","export const getDefaultLayout = () => {\n  return {\n    default: [\n      \"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\n      \"{tab} q w e r t y u i o p [ ] \\\\\",\n      \"{lock} a s d f g h j k l ; ' {enter}\",\n      \"{shift} z x c v b n m , . / {shift}\",\n      \".com @ {space}\"\n    ],\n    shift: [\n      \"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\n      \"{tab} Q W E R T Y U I O P { } |\",\n      '{lock} A S D F G H J K L : \" {enter}',\n      \"{shift} Z X C V B N M < > ? {shift}\",\n      \".com @ {space}\"\n    ]\n  };\n};\n","import SimpleKeyboard from \"./components/Keyboard\";\nexport default SimpleKeyboard;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export const parseProps = props => ({\n  ...props,\n  theme: `simple-keyboard ${props.theme || \"hg-theme-default\"}`\n});\n\nconst cleanProps = sourceObj => ({\n  ...sourceObj,\n  keyboardRef: null,\n  stateToIgnore: null\n});\n\nexport const changedProps = (prevProps, props) => {\n  const cleanedProps = cleanProps(props);\n  const cleanedPrevProps = cleanProps(prevProps);\n\n  return Object.keys(cleanedProps).filter(\n    propName => cleanedProps[propName] !== cleanedPrevProps[propName]\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport Keyboard from \"simple-keyboard\";\nimport { parseProps, changedProps } from \"../services/Utilities\";\nimport PropTypes from \"prop-types\";\nimport \"simple-keyboard/build/css/index.css\";\n\nconst KeyboardReact = props => {\n  const cssClass = props.baseClass || \"react-simple-keyboard\";\n  const initRef = useRef();\n  const keyboardRef = useRef();\n  const previousProps = useRef(props);\n\n  useEffect(() => {\n    const parsedProps = parseProps(props);\n\n    /**\n     * Initialize simple-keyboard\n     */\n    if (!initRef.current) {\n      initRef.current = true;\n      parsedProps.debug && console.log(\"ReactSimpleKeyboard: Init\");\n      keyboardRef.current = new Keyboard(`.${cssClass}`, parsedProps);\n      parsedProps.keyboardRef && parsedProps.keyboardRef(keyboardRef.current);\n    }\n\n    const updatedProps = changedProps(previousProps.current, parsedProps);\n\n    /**\n     * Only trigger render if props changed\n     */\n    if (updatedProps.length) {\n      const keyboard = keyboardRef.current;\n      previousProps.current = parsedProps;\n      keyboard.setOptions(parsedProps);\n      parsedProps.debug &&\n        console.log(\n          \"ReactSimpleKeyboard - setOptions called due to updated props:\",\n          updatedProps\n        );\n    }\n  }, [initRef, cssClass, previousProps, props]);\n\n  return <div className={cssClass} />;\n};\n\nKeyboardReact.propTypes = {\n  baseClass: PropTypes.string\n};\n\nexport default KeyboardReact;\n","import Keyboard from \"./components/Keyboard\";\n\nexport default Keyboard;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}