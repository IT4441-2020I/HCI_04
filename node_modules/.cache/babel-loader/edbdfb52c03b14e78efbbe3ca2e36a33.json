{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\src\\\\components\\\\components\\\\virtualKeyboard.js\";\nimport React from 'react';\nimport Keyboard from 'react-simple-keyboard';\nimport 'react-simple-keyboard/build/css/index.css';\nimport \"../css/virtualKeyboard.css\";\nimport { MDBCol, MDBRow } from \"mdbreact\";\n\nvar VirtualKeyboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(VirtualKeyboard, _React$Component);\n\n  var _super = _createSuper(VirtualKeyboard);\n\n  function VirtualKeyboard(props) {\n    var _this;\n\n    _classCallCheck(this, VirtualKeyboard);\n\n    _this = _super.call(this, props);\n\n    _this.onKeyPress = function (button) {\n      console.log(\"Button pressed\", button);\n    };\n\n    _this.state = {\n      input: \"\",\n      hightlightBgColor: \"#FF0000\"\n    };\n    return _this;\n  }\n\n  _createClass(VirtualKeyboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var sharedProps = {\n        onKeyPress: function onKeyPress(button) {\n          return _this2.onKeyPress(button);\n        },\n        physicalKeyboardHighlightPress: true,\n        physicalKeyboardHighlight: true,\n        physicalKeyboardHighlightBgColor: this.state.hightlightBgColor,\n        physicalKeyboardHighlightTextColor: \"white\",\n        buttonTheme: [{\n          class: \"thumbF\",\n          buttons: \"c v n m\"\n        }, {\n          class: \"indexF\",\n          buttons: \"Q q\"\n        }, {\n          class: \"middleF\",\n          buttons: \"Q q\"\n        }, {\n          class: \"ringF\",\n          buttons: \"Q q\"\n        }, {\n          class: \"smolF\",\n          buttons: \"Q q\"\n        }],\n        // This syncs the input of all keyboards\n        syncInstanceInputs: true\n      };\n      return /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        size: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Keyboard, Object.assign({}, sharedProps, {\n        baseClass: \"stdKeyboard\",\n        layout: {\n          'default': ['` 1 2 3 4 5 6 7 8 9 0 - = {backspace}', '{tab} q w e r t y u i o p [ ] \\\\', '{capslock} a s d f g h j k l ; \\' {enter}', '{shiftleft} z x c v b n m , . / {shiftright}', '{controlleft} {metaleft} {altleft} {space} {altright} {metaright}  {controllright}']\n        },\n        display: {\n          \"{escape}\": \"esc ⎋\",\n          \"{space}\": \"________________________Space________________________\",\n          \"{tab}\": \"tab ⇥\",\n          \"{backspace}\": \"backspace ⌫\",\n          \"{enter}\": \"enter ↵\",\n          \"{capslock}\": \"caps lock ⇪\",\n          \"{shiftleft}\": \"shift ⇧\",\n          \"{shiftright}\": \"shift ⇧\",\n          \"{controlleft}\": \"ctrl ⌃\",\n          \"{controllright}\": \"ctrl ⌃\",\n          \"{altleft}\": \"alt ⌥\",\n          \"{altright}\": \"alt ⌥\",\n          \"{metaleft}\": \"cmd ⌘\",\n          \"{metaright}\": \"cmd ⌘\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(MDBCol, {\n        size: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Keyboard, Object.assign({}, sharedProps, {\n        baseClass: \"StenoKeyboard1\",\n        layout: {\n          'default': ['{space}', 'q w e r t u i o p [', 'a s d f g j k l ; \\'']\n        },\n        display: {\n          '{space}': ' ',\n          'q': 'S',\n          'w': 'K',\n          'e': 'R',\n          'r': 'N',\n          't': 'H',\n          'u': '*',\n          'i': 'W',\n          'o': 'J',\n          'p': 'N',\n          '[': 'T',\n          'a': 'T',\n          's': 'P',\n          'd': 'H',\n          'f': 'N',\n          'g': 'S',\n          'j': 'I',\n          'k': 'Y',\n          'l': 'J',\n          ';': 'G',\n          '\\'': 'K'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(MDBRow, {\n        center: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        size: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Keyboard, Object.assign({}, sharedProps, {\n        baseClass: \"StenoKeyboard2\",\n        layout: {\n          'default': ['c v n m']\n        },\n        display: {\n          'c': 'U',\n          'v': 'O',\n          'n': 'E',\n          'm': 'A'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }))))));\n    }\n  }]);\n\n  return VirtualKeyboard;\n}(React.Component);\n\nexport { VirtualKeyboard as default };","map":{"version":3,"sources":["C:/Users/fappe/Desktop/HCI_04/src/components/components/virtualKeyboard.js"],"names":["React","Keyboard","MDBCol","MDBRow","VirtualKeyboard","props","onKeyPress","button","console","log","state","input","hightlightBgColor","sharedProps","physicalKeyboardHighlightPress","physicalKeyboardHighlight","physicalKeyboardHighlightBgColor","physicalKeyboardHighlightTextColor","buttonTheme","class","buttons","syncInstanceInputs","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport 'react-simple-keyboard/build/css/index.css';\r\nimport \"../css/virtualKeyboard.css\"\r\nimport {MDBCol, MDBRow} from \"mdbreact\";\r\n\r\nexport default class VirtualKeyboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: \"\",\r\n            hightlightBgColor: \"#FF0000\"\r\n        };\r\n    }\r\n\r\n    onKeyPress = (button) => {\r\n        console.log(\"Button pressed\", button);\r\n    }\r\n\r\n    render(){\r\n        let sharedProps = {\r\n            onKeyPress: button => this.onKeyPress(button),\r\n            physicalKeyboardHighlightPress: true,\r\n            physicalKeyboardHighlight: true,\r\n            physicalKeyboardHighlightBgColor: this.state.hightlightBgColor,\r\n            physicalKeyboardHighlightTextColor: \"white\",\r\n            buttonTheme: [\r\n                {\r\n                    class: \"thumbF\",\r\n                    buttons: \"c v n m\"\r\n                },\r\n                {\r\n                    class: \"indexF\",\r\n                    buttons: \"Q q\"\r\n                },\r\n                {\r\n                    class: \"middleF\",\r\n                    buttons: \"Q q\"\r\n                },\r\n                {\r\n                    class: \"ringF\",\r\n                    buttons: \"Q q\"\r\n                },\r\n                {\r\n                    class: \"smolF\",\r\n                    buttons: \"Q q\"\r\n                }\r\n            ],\r\n            // This syncs the input of all keyboards\r\n            syncInstanceInputs: true,\r\n        };\r\n        return (\r\n            <MDBRow>\r\n                <MDBCol size={8}>\r\n                    <Keyboard\r\n                        {...sharedProps}\r\n                        baseClass={\"stdKeyboard\"}\r\n                        layout={{\r\n                            'default': [\r\n                                '` 1 2 3 4 5 6 7 8 9 0 - = {backspace}',\r\n                                '{tab} q w e r t y u i o p [ ] \\\\',\r\n                                '{capslock} a s d f g h j k l ; \\' {enter}',\r\n                                '{shiftleft} z x c v b n m , . / {shiftright}',\r\n                                '{controlleft} {metaleft} {altleft} {space} {altright} {metaright}  {controllright}'\r\n                            ]\r\n                        }}\r\n                        display={{\r\n                            \"{escape}\": \"esc ⎋\",\r\n                            \"{space}\": \"________________________Space________________________\",\r\n                            \"{tab}\": \"tab ⇥\",\r\n                            \"{backspace}\": \"backspace ⌫\",\r\n                            \"{enter}\": \"enter ↵\",\r\n                            \"{capslock}\": \"caps lock ⇪\",\r\n                            \"{shiftleft}\": \"shift ⇧\",\r\n                            \"{shiftright}\": \"shift ⇧\",\r\n                            \"{controlleft}\": \"ctrl ⌃\",\r\n                            \"{controllright}\": \"ctrl ⌃\",\r\n                            \"{altleft}\": \"alt ⌥\",\r\n                            \"{altright}\": \"alt ⌥\",\r\n                            \"{metaleft}\": \"cmd ⌘\",\r\n                            \"{metaright}\": \"cmd ⌘\"\r\n                        }}\r\n                    />\r\n                </MDBCol>\r\n                <MDBCol size={4}>\r\n                    <MDBRow>\r\n                        <MDBCol>\r\n                            <Keyboard\r\n                                {...sharedProps}\r\n                                baseClass={\"StenoKeyboard1\"}\r\n                                layout={{\r\n                                    'default': [\r\n                                        '{space}',\r\n                                        'q w e r t u i o p [',\r\n                                        'a s d f g j k l ; \\''\r\n                                    ]\r\n                                }}\r\n                                display={{\r\n                                    '{space}': ' ',\r\n                                    'q': 'S',\r\n                                    'w': 'K',\r\n                                    'e': 'R',\r\n                                    'r': 'N',\r\n                                    't': 'H',\r\n                                    'u': '*',\r\n                                    'i': 'W',\r\n                                    'o': 'J',\r\n                                    'p': 'N',\r\n                                    '[': 'T',\r\n                                    'a': 'T',\r\n                                    's': 'P',\r\n                                    'd': 'H',\r\n                                    'f': 'N',\r\n                                    'g': 'S',\r\n                                    'j': 'I',\r\n                                    'k': 'Y',\r\n                                    'l': 'J',\r\n                                    ';': 'G',\r\n                                    '\\'': 'K'\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow center>\r\n                        <MDBCol size={5}>\r\n                            <Keyboard\r\n                                {...sharedProps}\r\n                                baseClass={\"StenoKeyboard2\"}\r\n                                layout={{\r\n                                    'default': [\r\n                                        'c v n m'\r\n                                    ]\r\n                                }}\r\n                                display={{\r\n                                    'c': 'U',\r\n                                    'v': 'O',\r\n                                    'n': 'E',\r\n                                    'm': 'A'\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}