{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\src\\\\components\\\\hoc-go\\\\wordLearn.js\";\nimport React from 'react';\nimport VirtualKeyboard from \"../components/virtualKeyboard\";\nimport '../css/study.css';\nimport { MDBBtn, MDBCard, MDBCardText, MDBIcon } from \"mdbreact\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nvar WordLearn = /*#__PURE__*/function (_React$Component) {\n  _inherits(WordLearn, _React$Component);\n\n  var _super = _createSuper(WordLearn);\n\n  function WordLearn(props) {\n    var _this;\n\n    _classCallCheck(this, WordLearn);\n\n    _this = _super.call(this, props);\n\n    _this.generateWord = function () {\n      var nextKey = Math.floor(Math.random() * 20 + 1);\n\n      switch (nextKey) {\n        case 1:\n          _this.setState({\n            targetWord: \"s..\"\n          });\n\n          break;\n\n        case 2:\n          _this.setState({\n            targetWord: \"c..\"\n          });\n\n          break;\n\n        case 3:\n          _this.setState({\n            targetWord: \"th..\"\n          });\n\n          break;\n\n        case 4:\n          _this.setState({\n            targetWord: \"tr..\"\n          });\n\n          break;\n\n        case 5:\n          _this.setState({\n            targetWord: \"gh..\"\n          });\n\n          break;\n\n        case 6:\n          _this.setState({\n            targetWord: \"gi..\"\n          });\n\n          break;\n\n        case 7:\n          _this.setState({\n            targetWord: \"đ..\"\n          });\n\n          break;\n\n        case 8:\n          _this.setState({\n            targetWord: \"..iê..\"\n          });\n\n          break;\n\n        case 9:\n          _this.setState({\n            targetWord: \"q..\"\n          });\n\n          break;\n\n        case 10:\n          _this.setState({\n            targetWord: \"..ua..\"\n          });\n\n          break;\n\n        case 11:\n          _this.setState({\n            targetWord: \"..i..\"\n          });\n\n          break;\n\n        case 12:\n          _this.setState({\n            targetWord: \"..ư..\"\n          });\n\n          break;\n\n        case 13:\n          _this.setState({\n            targetWord: \"..ưa..\"\n          });\n\n          break;\n\n        case 14:\n          _this.setState({\n            targetWord: \"..uy..\"\n          });\n\n          break;\n\n        case 15:\n          _this.setState({\n            targetWord: \"..uya..\"\n          });\n\n          break;\n\n        case 16:\n          _this.setState({\n            targetWord: \"..p\"\n          });\n\n          break;\n\n        case 17:\n          _this.setState({\n            targetWord: \"..ch\"\n          });\n\n          break;\n\n        case 18:\n          _this.setState({\n            targetWord: \"..ng\"\n          });\n\n          break;\n\n        case 19:\n          _this.setState({\n            targetWord: \"..nh\"\n          });\n\n          break;\n\n        case 20:\n          _this.setState({\n            targetWord: \"..m\"\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleKeyUp = function (key) {\n      if (_this.state.handleKey.indexOf(key) === -1) {\n        _this.setState({\n          keyCount: _this.state.keyCount + 1\n        });\n      } else {\n        _this.generateWord();\n\n        _this.setState({\n          correctKeyCount: _this.state.correctKeyCount + 1,\n          keyCount: _this.state.keyCount + 1\n        });\n      }\n\n      var p = _this.state.correctKeyCount / _this.state.keyCount;\n\n      if (p < 0.4) {\n        _this.setState({\n          correctPercentColor: \"#BB0000\"\n        });\n      } else if (p >= 0.4 && p < 0.7) {\n        _this.setState({\n          correctPercentColor: \"#F7B217\"\n        });\n      } else {\n        _this.setState({\n          correctPercentColor: \"#00BB00\"\n        });\n      }\n    };\n\n    _this.reload = function () {\n      _this.generateWord();\n\n      _this.setState({\n        correctKeyCount: 0,\n        keyCount: 0,\n        correctKeyCountColor: \"\",\n        correctPercentColor: \"\"\n      });\n    };\n\n    _this.state = {\n      targetWord: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(WordLearn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateWord();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBCard, {\n        color: \"mdb-color\",\n        text: \"white\",\n        className: \"text-center card-body target\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"target-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, this.state.targetWord))), /*#__PURE__*/React.createElement(VirtualKeyboard, {\n        highlightBgColor: this.state.highlightBgColor,\n        hintKey: \" \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MDBBtn, {\n        className: \"stats\",\n        gradient: \"blue\",\n        floating: true,\n        tag: \"a\",\n        onClick: function onClick() {\n          _this2.reload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"redo-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(KeyboardEventHandler, {\n        handleKeys: [\"alphanumeric\", \"-\", \"=\", \"[\", \"]\", \";\", \"'\", \",\", \".\"],\n        handleEventType: \"keyup\",\n        onKeyEvent: function onKeyEvent(key, e) {\n          _this2.handleKeyUp(key);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return WordLearn;\n}(React.Component);\n\nexport { WordLearn as default };","map":{"version":3,"sources":["C:/Users/fappe/Desktop/HCI_04/src/components/hoc-go/wordLearn.js"],"names":["React","VirtualKeyboard","MDBBtn","MDBCard","MDBCardText","MDBIcon","KeyboardEventHandler","WordLearn","props","generateWord","nextKey","Math","floor","random","setState","targetWord","handleKeyUp","key","state","handleKey","indexOf","keyCount","correctKeyCount","p","correctPercentColor","reload","correctKeyCountColor","highlightBgColor","e","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport VirtualKeyboard from \"../components/virtualKeyboard\";\r\nimport '../css/study.css'\r\nimport {MDBBtn, MDBCard, MDBCardText, MDBIcon} from \"mdbreact\";\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\nexport default class WordLearn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            targetWord: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateWord();\r\n    }\r\n\r\n    generateWord = ()=>{\r\n        let nextKey = Math.floor(Math.random() * 20 + 1);\r\n        switch (nextKey){\r\n            case 1:\r\n                this.setState({\r\n                    targetWord: \"s..\"\r\n                })\r\n                break;\r\n            case 2:\r\n                this.setState({\r\n                    targetWord: \"c..\"\r\n                })\r\n                break;\r\n            case 3:\r\n                this.setState({\r\n                    targetWord: \"th..\"\r\n                })\r\n                break;\r\n            case 4:\r\n                this.setState({\r\n                    targetWord: \"tr..\"\r\n                })\r\n                break;\r\n            case 5:\r\n                this.setState({\r\n                    targetWord: \"gh..\"\r\n                })\r\n                break;\r\n            case 6:\r\n                this.setState({\r\n                    targetWord: \"gi..\"\r\n                })\r\n                break;\r\n            case 7:\r\n                this.setState({\r\n                    targetWord: \"đ..\"\r\n                })\r\n                break;\r\n            case 8:\r\n                this.setState({\r\n                    targetWord: \"..iê..\"\r\n                })\r\n                break;\r\n            case 9:\r\n                this.setState({\r\n                    targetWord: \"q..\"\r\n                })\r\n                break;\r\n            case 10:\r\n                this.setState({\r\n                    targetWord: \"..ua..\"\r\n                })\r\n                break;\r\n            case 11:\r\n                this.setState({\r\n                    targetWord: \"..i..\"\r\n                })\r\n                break;\r\n            case 12:\r\n                this.setState({\r\n                    targetWord: \"..ư..\"\r\n                })\r\n                break;\r\n            case 13:\r\n                this.setState({\r\n                    targetWord: \"..ưa..\"\r\n                })\r\n                break;\r\n            case 14:\r\n                this.setState({\r\n                    targetWord: \"..uy..\"\r\n                })\r\n                break;\r\n            case 15:\r\n                this.setState({\r\n                    targetWord: \"..uya..\"\r\n                })\r\n                break;\r\n            case 16:\r\n                this.setState({\r\n                    targetWord: \"..p\"\r\n                })\r\n                break;\r\n            case 17:\r\n                this.setState({\r\n                    targetWord: \"..ch\"\r\n                })\r\n                break;\r\n            case 18:\r\n                this.setState({\r\n                    targetWord: \"..ng\"\r\n                })\r\n                break;\r\n            case 19:\r\n                this.setState({\r\n                    targetWord: \"..nh\"\r\n                })\r\n                break;\r\n            case 20:\r\n                this.setState({\r\n                    targetWord: \"..m\"\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleKeyUp = (key)=>{\r\n        if(this.state.handleKey.indexOf(key) === -1){\r\n            this.setState({\r\n                keyCount: this.state.keyCount + 1\r\n            })\r\n        }\r\n        else{\r\n            this.generateWord();\r\n            this.setState({\r\n                correctKeyCount: this.state.correctKeyCount + 1,\r\n                keyCount: this.state.keyCount + 1\r\n            })\r\n        }\r\n        let p = this.state.correctKeyCount/this.state.keyCount;\r\n        if(p < 0.4) {\r\n            this.setState({\r\n                correctPercentColor: \"#BB0000\"\r\n            })\r\n        }else if(p >= 0.4 && p < 0.7){\r\n            this.setState({\r\n                correctPercentColor: \"#F7B217\"\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                correctPercentColor: \"#00BB00\"\r\n            })\r\n        }\r\n    }\r\n\r\n    reload = ()=>{\r\n        this.generateWord();\r\n        this.setState({\r\n            correctKeyCount: 0,\r\n            keyCount: 0,\r\n            correctKeyCountColor: \"\",\r\n            correctPercentColor: \"\"\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <MDBCard color=\"mdb-color\" text=\"white\" className=\"text-center card-body target\">\r\n                    <div className=\"target-content\">\r\n                        <MDBCardText>{this.state.targetWord}</MDBCardText>\r\n                    </div>\r\n                </MDBCard>\r\n                <VirtualKeyboard\r\n                    highlightBgColor={this.state.highlightBgColor}\r\n                    hintKey=\" \"\r\n                />\r\n                <MDBBtn className=\"stats\" gradient=\"blue\" floating tag='a' onClick={()=>{this.reload()}}>\r\n                    <MDBIcon icon='redo-alt' />\r\n                </MDBBtn>\r\n                <KeyboardEventHandler\r\n                    handleKeys={[\"alphanumeric\",\"-\",\"=\",\"[\",\"]\",\";\",\"'\",\",\",\".\"]}\r\n                    handleEventType=\"keyup\"\r\n                    onKeyEvent={(key, e) =>{\r\n                        this.handleKeyUp(key);\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}