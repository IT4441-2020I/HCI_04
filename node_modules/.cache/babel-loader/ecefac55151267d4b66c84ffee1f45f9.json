{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\src\\\\components\\\\hoc-go\\\\syllableLearn.js\";\nimport React from 'react';\nimport VirtualKeyboard from \"../components/virtualKeyboard\";\nimport '../css/study.css';\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardText, MDBIcon } from \"mdbreact\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nvar SyllableLearn = /*#__PURE__*/function (_React$Component) {\n  _inherits(SyllableLearn, _React$Component);\n\n  var _super = _createSuper(SyllableLearn);\n\n  function SyllableLearn(props) {\n    var _this;\n\n    _classCallCheck(this, SyllableLearn);\n\n    _this = _super.call(this, props);\n\n    _this.generateKey = function () {\n      var nextKey = Math.floor(Math.random() * 20 + 1);\n\n      switch (nextKey) {\n        case 1:\n          _this.setState({\n            hintKey: \"q\",\n            handleKey: [\"q\"],\n            targetKey: \"s..\"\n          });\n\n          break;\n\n        case 2:\n          _this.setState({\n            hintKey: \"w\",\n            handleKey: [\"w\"],\n            targetKey: \"c..\"\n          });\n\n          break;\n\n        case 3:\n          _this.setState({\n            hintKey: \"a d\",\n            handleKey: [\"a\", \"d\"],\n            targetKey: \"th..\"\n          });\n\n          break;\n\n        case 4:\n          _this.setState({\n            hintKey: \"a e\",\n            handleKey: [\"a\", \"e\"],\n            targetKey: \"tr..\"\n          });\n\n          break;\n\n        case 5:\n          _this.setState({\n            hintKey: \"w s\",\n            handleKey: [\"w\", \"s\"],\n            targetKey: \"gh..\"\n          });\n\n          break;\n\n        case 6:\n          _this.setState({\n            hintKey: \"q d\",\n            handleKey: [\"q\", \"d\"],\n            targetKey: \"gi..\"\n          });\n\n          break;\n\n        case 7:\n          _this.setState({\n            hintKey: \"a s\",\n            handleKey: [\"a\", \"s\"],\n            targetKey: \"đ..\"\n          });\n\n          break;\n\n        case 8:\n          _this.setState({\n            hintKey: \"j n\",\n            handleKey: [\"j\", \"n\"],\n            targetKey: \"..iê..\"\n          });\n\n          break;\n\n        case 9:\n          _this.setState({\n            hintKey: \"q s d\",\n            handleKey: [\"q\", \"s\", \"d\"],\n            targetKey: \"q..\"\n          });\n\n          break;\n\n        case 10:\n          _this.setState({\n            hintKey: \"c v\",\n            handleKey: [\"c\", \"v\"],\n            targetKey: \"..ua..\"\n          });\n\n          break;\n\n        case 11:\n          _this.setState({\n            hintKey: \"u j\",\n            handleKey: [\"u\", \"j\"],\n            targetKey: \"..i..\"\n          });\n\n          break;\n\n        case 12:\n          _this.setState({\n            hintKey: \"c i\",\n            handleKey: [\"c\", \"i\"],\n            targetKey: \"..ư..\"\n          });\n\n          break;\n\n        case 13:\n          _this.setState({\n            hintKey: \"n i\",\n            handleKey: [\"n\", \"i\"],\n            targetKey: \"..ưa..\"\n          });\n\n          break;\n\n        case 14:\n          _this.setState({\n            hintKey: \"c k\",\n            handleKey: [\"c\", \"k\"],\n            targetKey: \"..uy..\"\n          });\n\n          break;\n\n        case 15:\n          _this.setState({\n            hintKey: \"n k\",\n            handleKey: [\"n\", \"k\"],\n            targetKey: \"..uya..\"\n          });\n\n          break;\n\n        case 16:\n          _this.setState({\n            hintKey: \"[ '\",\n            handleKey: [\"[\", \"'\"],\n            targetKey: \"..p\"\n          });\n\n          break;\n\n        case 17:\n          _this.setState({\n            hintKey: \"; '\",\n            handleKey: [\";\", \"'\"],\n            targetKey: \"..ch\"\n          });\n\n          break;\n\n        case 18:\n          _this.setState({\n            hintKey: \";\",\n            handleKey: [\";\"],\n            targetKey: \"..ng\"\n          });\n\n          break;\n\n        case 19:\n          _this.setState({\n            hintKey: \"'\",\n            handleKey: [\"'\"],\n            targetKey: \"..nh\"\n          });\n\n          break;\n\n        case 20:\n          _this.setState({\n            hintKey: \"[\",\n            handleKey: [\"[\"],\n            targetKey: \"..m\"\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleKeyUp = function (key) {\n      if (_this.state.handleKey.indexOf(key) === -1) {\n        _this.setState({\n          keyCount: _this.state.keyCount + 1\n        });\n      } else {\n        _this.generateKey();\n\n        _this.setState({\n          correctKeyCount: _this.state.correctKeyCount + 1,\n          keyCount: _this.state.keyCount + 1\n        });\n      }\n\n      var p = _this.state.correctKeyCount / _this.state.keyCount;\n\n      if (p < 0.4) {\n        _this.setState({\n          correctPercentColor: \"#BB0000\"\n        });\n      } else if (p >= 0.4 && p < 0.7) {\n        _this.setState({\n          correctPercentColor: \"#F7B217\"\n        });\n      } else {\n        _this.setState({\n          correctPercentColor: \"#00BB00\"\n        });\n      }\n    };\n\n    _this.reload = function () {\n      _this.generateKey();\n\n      _this.setState({\n        correctKeyCount: 0,\n        keyCount: 0,\n        correctKeyCountColor: \"\",\n        correctPercentColor: \"\"\n      });\n    };\n\n    _this.state = {\n      hintKey: \"q\",\n      handleKey: [\"\"],\n      targetKey: \"\",\n      correctKeyCount: 0,\n      keyCount: 0,\n      correctKeyCountColor: \"\",\n      correctPercentColor: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SyllableLearn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateKey();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBCard, {\n        color: \"mdb-color\",\n        text: \"white\",\n        className: \"text-center card-body target\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"targetKey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, this.state.targetKey))), /*#__PURE__*/React.createElement(VirtualKeyboard, {\n        highlightBgColor: this.state.highlightBgColor,\n        hintKey: this.state.hintKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MDBCard, {\n        className: \"m-3 stats\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        gradient: \"blue\",\n        floating: true,\n        tag: \"a\",\n        onClick: function onClick() {\n          _this2.reload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"redo-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(MDBCardBody, {\n        className: \"text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, \"S\\u1ED1 \\xE2m g\\xF5 \\u0111\\xFAng: \", /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: this.state.correctKeyCountColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 44\n        }\n      }, this.state.correctKeyCount)), /*#__PURE__*/React.createElement(MDBCardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }\n      }, \"T\\u1EC9 l\\u1EC7 g\\xF5 \\u0111\\xFAng: \", /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: this.state.correctPercentColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 44\n        }\n      }, this.state.correctKeyCount >= 1 ? Math.round(this.state.correctKeyCount / this.state.keyCount * 100) : 0, \"%\")))), /*#__PURE__*/React.createElement(KeyboardEventHandler, {\n        handleKeys: [\"alphanumeric\", \"-\", \"=\", \"[\", \"]\", \";\", \"'\", \",\", \".\"],\n        handleEventType: \"keyup\",\n        onKeyEvent: function onKeyEvent(key, e) {\n          _this2.handleKeyUp(key);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SyllableLearn;\n}(React.Component);\n\nexport { SyllableLearn as default };","map":{"version":3,"sources":["C:/Users/fappe/Desktop/HCI_04/src/components/hoc-go/syllableLearn.js"],"names":["React","VirtualKeyboard","MDBBtn","MDBCard","MDBCardBody","MDBCardText","MDBIcon","KeyboardEventHandler","SyllableLearn","props","generateKey","nextKey","Math","floor","random","setState","hintKey","handleKey","targetKey","handleKeyUp","key","state","indexOf","keyCount","correctKeyCount","p","correctPercentColor","reload","correctKeyCountColor","highlightBgColor","color","round","e","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport VirtualKeyboard from \"../components/virtualKeyboard\";\r\nimport '../css/study.css'\r\nimport {MDBBtn, MDBCard, MDBCardBody, MDBCardText, MDBIcon} from \"mdbreact\";\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\nexport default class SyllableLearn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            hintKey: \"q\",\r\n            handleKey: [\"\"],\r\n            targetKey: \"\",\r\n            correctKeyCount: 0,\r\n            keyCount: 0,\r\n            correctKeyCountColor: \"\",\r\n            correctPercentColor: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateKey();\r\n    }\r\n\r\n    generateKey = ()=>{\r\n        let nextKey = Math.floor(Math.random() * 20 + 1);\r\n        switch (nextKey){\r\n            case 1:\r\n                this.setState({\r\n                    hintKey: \"q\",\r\n                    handleKey: [\"q\"],\r\n                    targetKey: \"s..\"\r\n                })\r\n                break;\r\n            case 2:\r\n                this.setState({\r\n                    hintKey: \"w\",\r\n                    handleKey: [\"w\"],\r\n                    targetKey: \"c..\"\r\n                })\r\n                break;\r\n            case 3:\r\n                this.setState({\r\n                    hintKey: \"a d\",\r\n                    handleKey: [\"a\", \"d\"],\r\n                    targetKey: \"th..\"\r\n                })\r\n                break;\r\n            case 4:\r\n                this.setState({\r\n                    hintKey: \"a e\",\r\n                    handleKey: [\"a\", \"e\"],\r\n                    targetKey: \"tr..\"\r\n                })\r\n                break;\r\n            case 5:\r\n                this.setState({\r\n                    hintKey: \"w s\",\r\n                    handleKey: [\"w\", \"s\"],\r\n                    targetKey: \"gh..\"\r\n                })\r\n                break;\r\n            case 6:\r\n                this.setState({\r\n                    hintKey: \"q d\",\r\n                    handleKey: [\"q\", \"d\"],\r\n                    targetKey: \"gi..\"\r\n                })\r\n                break;\r\n            case 7:\r\n                this.setState({\r\n                    hintKey: \"a s\",\r\n                    handleKey: [\"a\", \"s\"],\r\n                    targetKey: \"đ..\"\r\n                })\r\n                break;\r\n            case 8:\r\n                this.setState({\r\n                    hintKey: \"j n\",\r\n                    handleKey: [\"j\", \"n\"],\r\n                    targetKey: \"..iê..\"\r\n                })\r\n                break;\r\n            case 9:\r\n                this.setState({\r\n                    hintKey: \"q s d\",\r\n                    handleKey: [\"q\", \"s\", \"d\"],\r\n                    targetKey: \"q..\"\r\n                })\r\n                break;\r\n            case 10:\r\n                this.setState({\r\n                    hintKey: \"c v\",\r\n                    handleKey: [\"c\", \"v\"],\r\n                    targetKey: \"..ua..\"\r\n                })\r\n                break;\r\n            case 11:\r\n                this.setState({\r\n                    hintKey: \"u j\",\r\n                    handleKey: [\"u\", \"j\"],\r\n                    targetKey: \"..i..\"\r\n                })\r\n                break;\r\n            case 12:\r\n                this.setState({\r\n                    hintKey: \"c i\",\r\n                    handleKey: [\"c\", \"i\"],\r\n                    targetKey: \"..ư..\"\r\n                })\r\n                break;\r\n            case 13:\r\n                this.setState({\r\n                    hintKey: \"n i\",\r\n                    handleKey: [\"n\", \"i\"],\r\n                    targetKey: \"..ưa..\"\r\n                })\r\n                break;\r\n            case 14:\r\n                this.setState({\r\n                    hintKey: \"c k\",\r\n                    handleKey: [\"c\", \"k\"],\r\n                    targetKey: \"..uy..\"\r\n                })\r\n                break;\r\n            case 15:\r\n                this.setState({\r\n                    hintKey: \"n k\",\r\n                    handleKey: [\"n\", \"k\"],\r\n                    targetKey: \"..uya..\"\r\n                })\r\n                break;\r\n            case 16:\r\n                this.setState({\r\n                    hintKey: \"[ '\",\r\n                    handleKey: [\"[\", \"'\"],\r\n                    targetKey: \"..p\"\r\n                })\r\n                break;\r\n            case 17:\r\n                this.setState({\r\n                    hintKey: \"; '\",\r\n                    handleKey: [\";\", \"'\"],\r\n                    targetKey: \"..ch\"\r\n                })\r\n                break;\r\n            case 18:\r\n                this.setState({\r\n                    hintKey: \";\",\r\n                    handleKey: [\";\"],\r\n                    targetKey: \"..ng\"\r\n                })\r\n                break;\r\n            case 19:\r\n                this.setState({\r\n                    hintKey: \"'\",\r\n                    handleKey: [\"'\"],\r\n                    targetKey: \"..nh\"\r\n                })\r\n                break;\r\n            case 20:\r\n                this.setState({\r\n                    hintKey: \"[\",\r\n                    handleKey: [\"[\"],\r\n                    targetKey: \"..m\"\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleKeyUp = (key)=>{\r\n        if(this.state.handleKey.indexOf(key) === -1){\r\n            this.setState({\r\n                keyCount: this.state.keyCount + 1\r\n            })\r\n        }\r\n        else{\r\n            this.generateKey();\r\n            this.setState({\r\n                correctKeyCount: this.state.correctKeyCount + 1,\r\n                keyCount: this.state.keyCount + 1\r\n            })\r\n        }\r\n        let p = this.state.correctKeyCount/this.state.keyCount;\r\n        if(p < 0.4) {\r\n            this.setState({\r\n                correctPercentColor: \"#BB0000\"\r\n            })\r\n        }else if(p >= 0.4 && p < 0.7){\r\n            this.setState({\r\n                correctPercentColor: \"#F7B217\"\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                correctPercentColor: \"#00BB00\"\r\n            })\r\n        }\r\n    }\r\n\r\n    reload = ()=>{\r\n        this.generateKey();\r\n        this.setState({\r\n            correctKeyCount: 0,\r\n            keyCount: 0,\r\n            correctKeyCountColor: \"\",\r\n            correctPercentColor: \"\"\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <MDBCard color=\"mdb-color\" text=\"white\" className=\"text-center card-body target\">\r\n                    <div className=\"targetKey\">\r\n                        <MDBCardText>{this.state.targetKey}</MDBCardText>\r\n                    </div>\r\n                </MDBCard>\r\n                <VirtualKeyboard\r\n                    highlightBgColor={this.state.highlightBgColor}\r\n                    hintKey={this.state.hintKey}\r\n                />\r\n                <MDBCard className=\"m-3 stats\">\r\n                    <MDBBtn gradient=\"blue\" floating tag='a' onClick={()=>{this.reload()}}>\r\n                        <MDBIcon icon='redo-alt' />\r\n                    </MDBBtn>\r\n                    <MDBCardBody className=\"text-primary\">\r\n                        <MDBCardText>\r\n                            Số âm gõ đúng: <b style={{color: this.state.correctKeyCountColor}}>{this.state.correctKeyCount}</b>\r\n                        </MDBCardText>\r\n                        <MDBCardText>\r\n                            Tỉ lệ gõ đúng: <b style={{color: this.state.correctPercentColor}}>{this.state.correctKeyCount >= 1 ? Math.round(this.state.correctKeyCount/this.state.keyCount*100) : 0}%</b>\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n                <KeyboardEventHandler\r\n                    handleKeys={[\"alphanumeric\",\"-\",\"=\",\"[\",\"]\",\";\",\"'\",\",\",\".\"]}\r\n                    handleEventType=\"keyup\"\r\n                    onKeyEvent={(key, e) =>{\r\n                        this.handleKeyUp(key);\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}