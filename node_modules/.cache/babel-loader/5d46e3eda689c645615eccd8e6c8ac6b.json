{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\fappe\\\\Desktop\\\\HCI_04\\\\src\\\\components\\\\hoc-go\\\\sentenceLearn.js\";\nimport React from 'react';\nimport VirtualKeyboard from \"../components/virtualKeyboard\";\nimport '../css/study.css';\nimport { MDBBtn, MDBCard, MDBCardText, MDBIcon } from \"mdbreact\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nvar SentenceLearn = /*#__PURE__*/function (_React$Component) {\n  _inherits(SentenceLearn, _React$Component);\n\n  var _super = _createSuper(SentenceLearn);\n\n  function SentenceLearn(props) {\n    var _this;\n\n    _classCallCheck(this, SentenceLearn);\n\n    _this = _super.call(this, props);\n\n    _this.generateSentence = function () {\n      var nextKey = Math.floor(Math.random() * 10 + 1);\n\n      switch (nextKey) {\n        case 1:\n          _this.setState({\n            targetSentence: \"Nước Việt Nam là một, dân tộc Việt Nam là một\"\n          });\n\n          break;\n\n        case 2:\n          _this.setState({\n            targetSentence: \"Các vua Hùng đã có công dựng nước, Bác cháu ta phải cùng nhau giữ lấy nước\"\n          });\n\n          break;\n\n        case 3:\n          _this.setState({\n            targetSentence: \"Dân ta phải biết sử ta, cho tường gốc tích nước nhà Việt Nam\"\n          });\n\n          break;\n\n        case 4:\n          _this.setState({\n            targetSentence: \"Trăm năm trong cõi người ta Chữ Tài, chữ Mệnh khéo là ghét nhau\"\n          });\n\n          break;\n\n        case 5:\n          _this.setState({\n            targetSentence: \"Có làm thì mới có ăn\"\n          });\n\n          break;\n\n        case 6:\n          _this.setState({\n            targetSentence: \"Trẻ em như búp trên cành, biết ăn ngủ, biết học hành là ngoan.\"\n          });\n\n          break;\n\n        case 7:\n          _this.setState({\n            targetSentence: \"Chính lòng yêu nước, chứ không phải lý tưởng cộng sản, là nguồn cảm hứng cho tôi\"\n          });\n\n          break;\n\n        case 8:\n          _this.setState({\n            targetSentence: \"Cá không ăn muối cá ươn, con cãi cha mẹ trăm đường con hư\"\n          });\n\n          break;\n\n        case 9:\n          _this.setState({\n            targetSentence: \"Công cha như núi Thái Sơn, nghĩa mẹ như nước trong nguồn chảy ra\"\n          });\n\n          break;\n\n        case 10:\n          _this.setState({\n            targetSentence: \"Một cây làm chẳng nên non, ba cây chụm lại nên hòn núi cao\"\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.reload = function () {\n      _this.generateSentence();\n\n      _this.setState({\n        inputVal: \"\",\n        targetSentenceColor: \"\"\n      });\n    };\n\n    _this.onInputChange = function (e) {\n      _this.setState({\n        inputVal: e.target.value\n      });\n    };\n\n    _this.keydownHandler = function (e) {\n      if (e.keyCode === 13) {\n        if (e.target.value === _this.state.targetSentence) {\n          _this.setState({\n            targetSentenceColor: \"#00BB00\"\n          });\n\n          setTimeout(function () {\n            _this.reload();\n          }, 200);\n        } else {\n          _this.setState({\n            targetSentenceColor: \"#FF0000\"\n          });\n\n          setTimeout(function () {\n            _this.setState({\n              targetSentenceColor: \"\"\n            });\n          }, 200);\n        }\n      }\n    };\n\n    _this.state = {\n      targetSentence: \"\",\n      inputVal: \"\",\n      targetSentenceColor: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SentenceLearn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateSentence();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MDBCard, {\n        color: \"mdb-color\",\n        text: \"white\",\n        className: \"text-center card-body target\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"target-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardText, {\n        style: {\n          color: this.state.targetSentenceColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, this.state.targetSentence))), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input\",\n        className: \"form-control form-control-lg\",\n        value: this.state.inputVal,\n        onChange: this.onInputChange,\n        onKeyDown: this.keydownHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(VirtualKeyboard, {\n        highlightBgColor: this.state.highlightBgColor,\n        hintKey: \" \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MDBBtn, {\n        className: \"stats\",\n        gradient: \"blue\",\n        floating: true,\n        tag: \"a\",\n        onClick: function onClick() {\n          _this2.reload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"redo-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(KeyboardEventHandler, {\n        handleKeys: [\"enter\"],\n        handleEventType: \"keyup\",\n        onKeyEvent: function onKeyEvent(key, e) {\n          console.log(\"enter\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SentenceLearn;\n}(React.Component);\n\nexport { SentenceLearn as default };","map":{"version":3,"sources":["C:/Users/fappe/Desktop/HCI_04/src/components/hoc-go/sentenceLearn.js"],"names":["React","VirtualKeyboard","MDBBtn","MDBCard","MDBCardText","MDBIcon","KeyboardEventHandler","SentenceLearn","props","generateSentence","nextKey","Math","floor","random","setState","targetSentence","reload","inputVal","targetSentenceColor","onInputChange","e","target","value","keydownHandler","keyCode","state","setTimeout","color","highlightBgColor","key","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport VirtualKeyboard from \"../components/virtualKeyboard\";\r\nimport '../css/study.css'\r\nimport {MDBBtn, MDBCard, MDBCardText, MDBIcon} from \"mdbreact\";\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\nexport default class SentenceLearn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            targetSentence: \"\",\r\n            inputVal: \"\",\r\n            targetSentenceColor: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateSentence();\r\n    }\r\n\r\n    generateSentence = ()=>{\r\n        let nextKey = Math.floor(Math.random() * 10 + 1);\r\n        switch (nextKey){\r\n            case 1:\r\n                this.setState({\r\n                    targetSentence: \"Nước Việt Nam là một, dân tộc Việt Nam là một\"\r\n                })\r\n                break;\r\n            case 2:\r\n                this.setState({\r\n                    targetSentence: \"Các vua Hùng đã có công dựng nước, Bác cháu ta phải cùng nhau giữ lấy nước\"\r\n                })\r\n                break;\r\n            case 3:\r\n                this.setState({\r\n                    targetSentence: \"Dân ta phải biết sử ta, cho tường gốc tích nước nhà Việt Nam\"\r\n                })\r\n                break;\r\n            case 4:\r\n                this.setState({\r\n                    targetSentence: \"Trăm năm trong cõi người ta Chữ Tài, chữ Mệnh khéo là ghét nhau\"\r\n                })\r\n                break;\r\n            case 5:\r\n                this.setState({\r\n                    targetSentence: \"Có làm thì mới có ăn\"\r\n                })\r\n                break;\r\n            case 6:\r\n                this.setState({\r\n                    targetSentence: \"Trẻ em như búp trên cành, biết ăn ngủ, biết học hành là ngoan.\"\r\n                })\r\n                break;\r\n            case 7:\r\n                this.setState({\r\n                    targetSentence: \"Chính lòng yêu nước, chứ không phải lý tưởng cộng sản, là nguồn cảm hứng cho tôi\"\r\n                })\r\n                break;\r\n            case 8:\r\n                this.setState({\r\n                    targetSentence: \"Cá không ăn muối cá ươn, con cãi cha mẹ trăm đường con hư\"\r\n                })\r\n                break;\r\n            case 9:\r\n                this.setState({\r\n                    targetSentence: \"Công cha như núi Thái Sơn, nghĩa mẹ như nước trong nguồn chảy ra\"\r\n                })\r\n                break;\r\n            case 10:\r\n                this.setState({\r\n                    targetSentence: \"Một cây làm chẳng nên non, ba cây chụm lại nên hòn núi cao\"\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    reload = ()=>{\r\n        this.generateSentence();\r\n        this.setState({\r\n            inputVal: \"\",\r\n            targetSentenceColor: \"\"\r\n        })\r\n    }\r\n\r\n    onInputChange = (e)=>{\r\n        this.setState({ inputVal: e.target.value });\r\n    }\r\n\r\n    keydownHandler = (e)=>{\r\n        if(e.keyCode === 13){\r\n            if(e.target.value === this.state.targetSentence){\r\n                this.setState({targetSentenceColor: \"#00BB00\"});\r\n                setTimeout(()=>{\r\n                    this.reload();\r\n                }, 200);\r\n            }\r\n            else{\r\n                this.setState({targetSentenceColor: \"#FF0000\"});\r\n                setTimeout(()=>{\r\n                    this.setState({targetSentenceColor: \"\"});\r\n                }, 200);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <MDBCard color=\"mdb-color\" text=\"white\" className=\"text-center card-body target\">\r\n                    <div className=\"target-content\">\r\n                        <MDBCardText style={{color: this.state.targetSentenceColor}}>{this.state.targetSentence}</MDBCardText>\r\n                    </div>\r\n                </MDBCard>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"input\"\r\n                    className=\"form-control form-control-lg\"\r\n                    value={this.state.inputVal}\r\n                    onChange={this.onInputChange}\r\n                    onKeyDown={this.keydownHandler}\r\n                />\r\n                <VirtualKeyboard\r\n                    highlightBgColor={this.state.highlightBgColor}\r\n                    hintKey=\" \"\r\n                />\r\n                <MDBBtn className=\"stats\" gradient=\"blue\" floating tag='a' onClick={()=>{this.reload()}}>\r\n                    <MDBIcon icon='redo-alt' />\r\n                </MDBBtn>\r\n                <KeyboardEventHandler\r\n                    handleKeys={[\"enter\"]}\r\n                    handleEventType=\"keyup\"\r\n                    onKeyEvent={(key, e) =>{\r\n                        console.log(\"enter\");\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}